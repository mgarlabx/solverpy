[{"id":23331,"chapterId":15788,"title":"Abertura do curso, introdu\u00e7\u00e3o ao m\u00f3dulo","description":"Vamos iniciar este curso com uma introdu\u00e7\u00e3o ao m\u00f3dulo 1, onde conheceremos a instrutora virtual N\u00f4va. Exploraremos tamb\u00e9m o c\u00f3digo base do curso e daremos as boas-vindas ao nosso estudo de Python.","moduleNumber":1,"chapterNumber":1,"lessonNumber":1,"file":"vd1_001.mp4","footer":null,"youtube_id":"8B98r6jEY5Q","youtube_title":"[Curso Python 1.1.1] Abertura do curso, introdu\u00e7\u00e3o ao m\u00f3dulo","video_contents":"Abertura do curso, introdu\u00e7\u00e3o ao m\u00f3dulo 1, apresenta\u00e7\u00e3o da instrutora virtual N\u00f4va, apresenta\u00e7\u00e3o do c\u00f3digo base do curso."},{"id":20405,"chapterId":15788,"title":"A simpllicidade do editor Python usado no m\u00f3dulo","description":"Vamos explorar a simplicidade do editor Python utilizado neste m\u00f3dulo. Iremos abordar o funcionamento do editor, aprender como executar scripts de forma eficiente e t\u00e9cnicas para manter seu c\u00f3digo limpo e organizado, criando um ambiente de desenvolvimento mais produtivo.","moduleNumber":1,"chapterNumber":1,"lessonNumber":2,"file":"vd1_002.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"Oydn65QuEaQ","youtube_title":"[Curso Python 1.1.2] A simpllicidade do editor Python usado no m\u00f3dulo","video_contents":"Funcionamento do editor usado nesse m\u00f3dulo, rodando scripts e limpando o c\u00f3digo."},{"id":94208,"chapterId":65096,"title":"Primeiros Passos com o Comando print()","description":"Vamos explorar o comando print(), a porta de entrada essencial para iniciantes em Python. Aprenda a exibir mensagens na tela, utilizando par\u00eanteses e aspas de forma correta. Descubra como manipular diferentes tipos de aspas para aprimorar suas sa\u00eddas de texto.","moduleNumber":1,"chapterNumber":2,"lessonNumber":1,"file":"vd1_101.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"CbXEqzKDQxw","youtube_title":"[Curso Python 1.2.1] Primeiros Passos com o Comando print()","video_contents":"O comando print(), a porta de entrada para quem est\u00e1 come\u00e7ando a aprender Python. Ccomo exibir mensagens na tela, usando par\u00eanteses e aspas corretamente. Uso de aspas."},{"id":11683,"chapterId":65096,"title":"Textos e N\u00fameros no print(): Diferen\u00e7as","description":"Voc\u00ea ir\u00e1 explorar como o Python diferencia textos e n\u00fameros ao utilizar o comando print(). Entenda a interpreta\u00e7\u00e3o de strings e valores num\u00e9ricos, al\u00e9m de como combin\u00e1-los e format\u00e1-los eficientemente nas sa\u00eddas do seu programa.","moduleNumber":1,"chapterNumber":2,"lessonNumber":2,"file":"vd1_102.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"iA7ZIj1MFII","youtube_title":"[Curso Python 1.2.2] Textos e N\u00fameros no print(): Diferen\u00e7as","video_contents":"Como o Python interpreta textos e n\u00fameros ao usar o comando print()."},{"id":88520,"chapterId":65096,"title":"Entendendo os Tipos de Dados","description":"Iremos abordar os tipos de dados em Python, essenciais para uma boa programa\u00e7\u00e3o. Descubra como strings e n\u00fameros s\u00e3o interpretados, e como evitar erros comuns. Vamos explorar exemplos pr\u00e1ticos para solidificar esse conhecimento e escrever c\u00f3digos eficazes.","moduleNumber":1,"chapterNumber":2,"lessonNumber":3,"file":"vd1_103.mp4","footer":null,"youtube_id":"f60QsmFxu1A","youtube_title":"[Curso Python 1.2.3] Entendendo os Tipos de Dados","video_contents":"\u00c9 essencial compreender os tipos de dados em Python! Quando escrevemos algo entre aspas (simples ou duplas), o Python interpreta como uma string, ou seja, um texto. J\u00e1 quando digitamos um valor sem aspas, ele \u00e9 entendido como um n\u00famero. Aten\u00e7\u00e3o: se voc\u00ea colocar um n\u00famero entre aspas, ele tamb\u00e9m ser\u00e1 tratado como string! Saber essa diferen\u00e7a \u00e9 fundamental para evitar erros e escrever c\u00f3digos que funcionam corretamente. Vamos explorar esses conceitos com exemplos simples e pr\u00e1ticos."},{"id":44189,"chapterId":65096,"title":"Fazendo Contas com Python","description":"Iremos explorar as opera\u00e7\u00f5es matem\u00e1ticas em Python, incluindo soma, subtra\u00e7\u00e3o, multiplica\u00e7\u00e3o (com *), divis\u00e3o e pot\u00eancias (com **). Descubra como organizar c\u00f3digo com o comando print() e realizar c\u00e1lculos combinados de forma direta e eficiente. Exemplos pr\u00e1ticos guiar\u00e3o seu aprendizado.","moduleNumber":1,"chapterNumber":2,"lessonNumber":4,"file":"vd1_104.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"RPnDVsOaR7I","youtube_title":"[Curso Python 1.2.4] Fazendo Contas com Python","video_contents":"Agora que entendemos como o Python lida com n\u00fameros, vamos nos divertir com as opera\u00e7\u00f5es matem\u00e1ticas! \u00c9 poss\u00edvel somar, subtrair, multiplicar, dividir e at\u00e9 calcular pot\u00eancias com facilidade. Para multiplicar, usamos o asterisco (*). Para pot\u00eancias, usamos dois asteriscos (**). Podemos tamb\u00e9m escrever o comando print() em outra linha, deixando o c\u00f3digo mais organizado. Python permite combinar v\u00e1rias opera\u00e7\u00f5es numa mesma linha, tornando os c\u00e1lculos simples e diretos. Vamos explorar tudo isso com exemplos pr\u00e1ticos!"},{"id":78844,"chapterId":65096,"title":"Opera\u00e7\u00f5es com Strings: Soma e Repeti\u00e7\u00e3o","description":"Nesta aula, exploraremos como as opera\u00e7\u00f5es de soma (+) e multiplica\u00e7\u00e3o (*) podem ser aplicadas a strings. Aprenda a concatenar textos e usar o asterisco para repetir palavras, tornando seu c\u00f3digo mais criativo. Descubra tamb\u00e9m o uso da v\u00edrgula no print() para espa\u00e7ar textos.","moduleNumber":1,"chapterNumber":2,"lessonNumber":5,"file":"vd1_105.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"TujcZofp_pE","youtube_title":"[Curso Python 1.2.5] Opera\u00e7\u00f5es com Strings: Soma e Repeti\u00e7\u00e3o","video_contents":"Strings n\u00e3o s\u00e3o n\u00fameros, mas tamb\u00e9m permitem opera\u00e7\u00f5es! Nesta aula, vamos aprender a usar os sinais de soma (+) e multiplica\u00e7\u00e3o (*) com textos. A soma de strings \u00e9 chamada de concatena\u00e7\u00e3o e une duas palavras, como em \"Ol\u00e1\" + \"Amanda\" que resulta em \"Ol\u00e1Amanda\". Tamb\u00e9m \u00e9 poss\u00edvel usar v\u00edrgula no print(), o que adiciona um espa\u00e7o entre as palavras. E o asterisco? Ele serve para repetir a string v\u00e1rias vezes, como em \"Ol\u00e1\" * 3, que imprime \u201cOl\u00e1Ol\u00e1Ol\u00e1\u201d. Com esses recursos, voc\u00ea vai deixar seu c\u00f3digo mais criativo e expressivo!"},{"id":52596,"chapterId":65096,"title":"Coment\u00e1rios e C\u00f3digo Mais Claro","description":"Vamos explorar o uso da cerquilha (#) para inserir coment\u00e1rios em Python. Com este s\u00edmbolo, podemos neutralizar linhas ou explicar o funcionamento do c\u00f3digo. Coment\u00e1rios s\u00e3o cruciais para a organiza\u00e7\u00e3o e clareza, especialmente em projetos maiores. Aprenda quando e como utiliz\u00e1-los de forma eficaz!","moduleNumber":1,"chapterNumber":2,"lessonNumber":6,"file":"vd1_106.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"aDUpLGaEoiA","youtube_title":"[Curso Python 1.2.6] Coment\u00e1rios e C\u00f3digo Mais Claro","video_contents":"Nesta aula, vamos aprender a usar a cerquilha (#), tamb\u00e9m conhecida como \u201cjogo da velha\u201d, para escrever coment\u00e1rios em Python. Quando colocamos esse s\u00edmbolo no in\u00edcio de uma linha, o Python simplesmente ignora o conte\u00fado, ele n\u00e3o \u00e9 executado. Isso \u00e9 \u00fatil para \u201cneutralizar\u201d linhas temporariamente ou explicar o que o c\u00f3digo est\u00e1 fazendo. Coment\u00e1rios s\u00e3o essenciais para manter o c\u00f3digo organizado e compreens\u00edvel, especialmente quando ele come\u00e7a a crescer. Vamos ver exemplos pr\u00e1ticos de como e quando usar esse recurso fundamental!"},{"id":41520,"chapterId":88049,"title":"Vari\u00e1veis e nomes claros","description":"Vamos aprender um conceito essencial: vari\u00e1veis! Pense nelas como caixas nomeadas que guardam valores. Chamamos uma vari\u00e1vel de 'peso' e discutimos a import\u00e2ncia de usar nomes claros, como 'weight'. Veremos tamb\u00e9m erros comuns, como nomes incorretos, e como vari\u00e1veis organizam e simplificam o c\u00f3digo.","moduleNumber":1,"chapterNumber":3,"lessonNumber":1,"file":"vd1_201.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"sQ_-R0K619o","youtube_title":"[Curso Python 1.3.1] Vari\u00e1veis e nomes claros","video_contents":"Vamos aprender um conceito essencial da programa\u00e7\u00e3o: vari\u00e1veis! Pense nelas como caixas com nomes, onde podemos guardar valores. No exemplo, criamos a vari\u00e1vel peso com um n\u00famero dentro. Como aprendemos, o nome da vari\u00e1vel n\u00e3o deve estar entre aspas, sen\u00e3o vira uma string. \u00c9 uma boa pr\u00e1tica usar nomes em ingl\u00eas, como weight. Tamb\u00e9m vamos ver um erro comum: escrever o nome da vari\u00e1vel de forma incorreta. Ao corrigir, tudo funciona! Vari\u00e1veis tornam o c\u00f3digo organizado, reutiliz\u00e1vel e mais f\u00e1cil de entender."},{"id":79121,"chapterId":88049,"title":"Opera\u00e7\u00f5es matem\u00e1ticas com vari\u00e1veis","description":"Praticando com vari\u00e1veis, criaremos uma para peso e outra para altura. Calcularemos o IMC com precis\u00e3o, armazenando o resultado em uma nova vari\u00e1vel. Utilizaremos print() para exibir o valor e round() para arredond\u00e1-lo a duas casas decimais. Um \u00f3timo exemplo para dominar o uso de vari\u00e1veis.","moduleNumber":1,"chapterNumber":3,"lessonNumber":2,"file":"vd1_202.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"TxBBtw7SAz0","youtube_title":"[Curso Python 1.3.2] Opera\u00e7\u00f5es matem\u00e1ticas com vari\u00e1veis","video_contents":"Agora vamos usar vari\u00e1veis de forma pr\u00e1tica e divertida! Primeiro, criamos uma vari\u00e1vel para o peso e outra para a altura. Depois, usamos essas informa\u00e7\u00f5es para calcular o IMC (\u00cdndice de Massa Corporal) com a f\u00f3rmula correta e armazenamos o resultado em uma nova vari\u00e1vel. Usamos print() para exibir o IMC na tela e, para deixar o resultado mais bonito, aplicamos a fun\u00e7\u00e3o round() e arredondamos para duas casas decimais. E o que \u00e9 uma fun\u00e7\u00e3o? Ah, isso vem na pr\u00f3xima aula! Por enquanto, aproveite esse exemplo real para consolidar o uso de vari\u00e1veis."},{"id":29062,"chapterId":88049,"title":"Fun\u00e7\u00f5es em Python: Como Usar","description":"Vamos explorar as fun\u00e7\u00f5es em Python, uma ferramenta essencial para organizar e otimizar seu c\u00f3digo. Veremos a import\u00e2ncia dos nomes e par\u00e2metros e a diferen\u00e7a entre fun\u00e7\u00f5es que retornam ou n\u00e3o um valor. Com exemplos pr\u00e1ticos, voc\u00ea compreender\u00e1 como utiliz\u00e1-las eficazmente no seu dia a dia.","moduleNumber":1,"chapterNumber":3,"lessonNumber":3,"file":"vd1_203.mp4","footer":null,"youtube_id":"foqPgslaKHA","youtube_title":"[Curso Python 1.3.3] Fun\u00e7\u00f5es em Python: Como Usar","video_contents":"Fun\u00e7\u00f5es s\u00e3o ferramentas poderosas do Python! Elas ajudam a organizar o c\u00f3digo, economizar tempo e aumentar a precis\u00e3o. Toda fun\u00e7\u00e3o tem um nome (sempre sem espa\u00e7os) seguido de par\u00eanteses com seus par\u00e2metros. \u00c9 uma boa pr\u00e1tica usar nomes em ingl\u00eas e, quando necess\u00e1rio, usar underscore (_) para separar palavras. Na aula anterior usamos round(valor, casas), uma fun\u00e7\u00e3o que retorna um valor arredondado. J\u00e1 print() \u00e9 uma fun\u00e7\u00e3o que exibe algo, mas n\u00e3o retorna nada. Ou seja, fun\u00e7\u00f5es podem ou n\u00e3o retornar valores, dependendo do que fazem. Vamos entender isso na pr\u00e1tica!"},{"id":59315,"chapterId":88049,"title":"Explorando Fun\u00e7\u00f5es com N\u00fameros e Strings","description":"Vamos explorar fun\u00e7\u00f5es com n\u00fameros e strings em Python. Revisitamos round() para um decimal e int() para parte inteira. Em strings: len() conta caracteres, upper() transforma em mai\u00fasculas e lower() em min\u00fasculas. Observaremos o uso do ponto antes das fun\u00e7\u00f5es. Experimente com a gente!","moduleNumber":1,"chapterNumber":3,"lessonNumber":4,"file":"vd1_204.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"7uv28EAMa0o","youtube_title":"[Curso Python 1.3.4] Explorando Fun\u00e7\u00f5es com N\u00fameros e Strings","video_contents":"Nesta aula, vamos explorar mais exemplos de fun\u00e7\u00f5es em Python! Revisitamos a fun\u00e7\u00e3o round(), agora arredondando para uma casa decimal. Em seguida, usamos int() para obter apenas a parte inteira de um n\u00famero. Tamb\u00e9m trabalhamos com strings usando fun\u00e7\u00f5es \u00fateis: len() retorna o n\u00famero de caracteres; upper() transforma o texto em mai\u00fasculas; e lower() em min\u00fasculas. Repare que essas \u00faltimas usam um formato diferente, com um ponto antes do nome da fun\u00e7\u00e3o, um conceito que vamos explicar em breve. Por enquanto, aproveite para experimentar esses novos recursos!"},{"id":52403,"chapterId":88049,"title":"Condicionais em Python: Usando o IF","description":"Agora vamos explorar condicionais, uma base crucial na programa\u00e7\u00e3o. Com a instru\u00e7\u00e3o if, podemos especificar a\u00e7\u00f5es condicionais, como calcular o IMC e verificar se est\u00e1 acima de 25 para exibir 'sobrepeso'. Dominar o uso de if \u00e9 fundamental no seu aprendizado de Python!","moduleNumber":1,"chapterNumber":3,"lessonNumber":5,"file":"vd1_301.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"vuwxPQm_kpQ","youtube_title":"[Curso Python 1.3.5] Condicionais em Python: Usando o IF","video_contents":"Agora vamos aprender sobre condicionais, um conceito essencial em programa\u00e7\u00e3o. Com a instru\u00e7\u00e3o if, dizemos ao Python: \u201cSE algo acontecer, FA\u00c7A alguma coisa\u201d. No exemplo, usamos peso e altura para calcular o IMC e adicionamos a condi\u00e7\u00e3o: se o IMC for maior que 25, exibir \u201csobrepeso\u201d. Aprender a usar corretamente o if \u00e9 um passo importante na sua jornada!"},{"id":82170,"chapterId":88049,"title":"If, Else e Elif: Tomando Decis\u00f5es com o C\u00f3digo","description":"Agora n\u00f3s vamos explorar o uso de if, else e elif para tomar decis\u00f5es no c\u00f3digo. Com exemplos pr\u00e1ticos, como o c\u00e1lculo do IMC, voc\u00ea aprender\u00e1 a fazer verifica\u00e7\u00f5es condicionais, garantindo um c\u00f3digo mais inteligente e adapt\u00e1vel. Aten\u00e7\u00e3o \u00e0 indenta\u00e7\u00e3o e sintaxe \u00e9 fundamental!","moduleNumber":1,"chapterNumber":3,"lessonNumber":6,"file":"vd1_302.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"CXbHcIK4pqU","youtube_title":"[Curso Python 1.3.6] If, Else e Elif: Tomando Decis\u00f5es com o C\u00f3digo","video_contents":"Vamos avan\u00e7ar com as condicionais! J\u00e1 usamos o if, agora vamos incluir o else (caso contr\u00e1rio) e o elif (caso intermedi\u00e1rio). No exemplo do IMC, mostramos: se o valor for maior que 25, imprima \u201csobrepeso\u201d; se for menor que 18.5, imprima \u201cabaixo do peso\u201d; caso contr\u00e1rio, imprima \u201cpeso normal\u201d. As regras s\u00e3o simples: todas as instru\u00e7\u00f5es terminam com dois pontos, e a linha seguinte precisa estar indentada. Cuidado com a indenta\u00e7\u00e3o e com erros de sintaxe! Ler as mensagens de erro ajuda muito. Condicionais tornam seu c\u00f3digo inteligente e adapt\u00e1vel!"},{"id":47878,"chapterId":19201,"title":"Organizando V\u00e1rios Dados em Listas","description":"Nesta aula, introduziremos as listas, um conceito fundamental. Inicialmente, criamos vari\u00e1veis separadas para nomes como \"Amanda\" e \"Marcelo\", mas isso se mostrou ineficiente. Com as listas, aprenderemos a agrupar e acessar dados de forma organizada, tornando o c\u00f3digo mais limpo e eficiente.","moduleNumber":1,"chapterNumber":4,"lessonNumber":1,"file":"vd1_401.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"skO1zTjqjgE","youtube_title":"[Curso Python 1.4.1] Organizando V\u00e1rios Dados em Listas","video_contents":"Nesta aula, vamos introduzir um conceito fundamental: as listas! Come\u00e7amos criando vari\u00e1veis separadas para armazenar nomes como \u201cAmanda\u201d, \u201cMarcelo\u201d, \u201cJ\u00falia\u201d, \u201cRog\u00e9rio\u201d e \u201cNeusa\u201d, usando name0, name1 e assim por diante. Funcionou, mas ficou trabalhoso e pouco pr\u00e1tico. A partir disso, vamos aprender como usar listas para agrupar todos esses valores em uma \u00fanica estrutura organizada, acessando cada item por sua posi\u00e7\u00e3o. Usar listas torna o c\u00f3digo mais limpo, eficiente e f\u00e1cil de manter. Preparado para simplificar tudo com apenas uma vari\u00e1vel? Vamos l\u00e1!"},{"id":17050,"chapterId":19201,"title":"Criando e Usando Sua Primeira Lista","description":"Nessa aula, simplificaremos o c\u00f3digo criando e usando listas. Listas permitem armazenar m\u00faltiplos valores em uma \u00fanica vari\u00e1vel. Aprenda a criar listas de nomes usando colchetes e acesse os elementos por suas posi\u00e7\u00f5es, lembrando que a indexa\u00e7\u00e3o come\u00e7a em zero. Vamos tornar o programa mais eficiente!","moduleNumber":1,"chapterNumber":4,"lessonNumber":2,"file":"vd1_402.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"4xcuhm89WuA","youtube_title":"[Curso Python 1.4.2] Criando e Usando Sua Primeira Lista","video_contents":"Para simplificar o c\u00f3digo da atividade anterior, vamos usar uma lista! Listas s\u00e3o estruturas que armazenam v\u00e1rios valores em uma \u00fanica vari\u00e1vel, facilitando repeti\u00e7\u00f5es e organiza\u00e7\u00e3o. Criamos uma lista de nomes entre colchetes, com cada nome entre aspas e separado por v\u00edrgula. Para acessar os elementos, usamos a posi\u00e7\u00e3o entre colchetes, lembrando que a contagem come\u00e7a do zero! Assim, nomes[0] retorna o primeiro nome. J\u00e1 ficou mais simples que criar v\u00e1rias vari\u00e1veis, certo? E o melhor: ainda podemos deixar isso mais pr\u00e1tico. Vamos em frente!"},{"id":37711,"chapterId":19201,"title":"Percorrendo Listas com o Comando FOR ","description":"Agora vamos aprender a percorrer listas usando o comando for. Esse m\u00e9todo permite analisar cada item, um por vez, sem repetir linhas. A estrutura inicia com for, segue com dois pontos e a linha seguinte deve estar indentada. Utilize nomes claros e leg\u00edveis para facilitar a compreens\u00e3o do c\u00f3digo.","moduleNumber":1,"chapterNumber":4,"lessonNumber":3,"file":"vd1_403.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"kqKYoWlg8fA","youtube_title":"[Curso Python 1.4.3] Percorrendo Listas com o Comando FOR ","video_contents":"Agora vamos aprender a percorrer listas usando o comando for. Isso nos permite analisar cada item da lista, um por vez, sem repetir linhas manualmente. A estrutura \u00e9 parecida com o if: come\u00e7a com for, termina com dois pontos e a linha seguinte precisa estar indentada. No exemplo, usamos for name in names: para acessar cada elemento da lista names e armazen\u00e1-lo na vari\u00e1vel name. Funciona com qualquer nome, mas lembre-se: o c\u00f3digo deve ser claro e f\u00e1cil de entender. Escreva pensando em quem vai ler depois de voc\u00ea. Clareza tamb\u00e9m \u00e9 gentileza no mundo da programa\u00e7\u00e3o!"},{"id":87960,"chapterId":19201,"title":"Dicion\u00e1rios: Chaves, Valores e Organiza\u00e7\u00e3o","description":"Agora vamos explorar dicion\u00e1rios em Python, que armazenam pares de chave e valor, como \"banana\": \"fruto da bananeira\". Essenciais para organizar dados de forma estruturada, s\u00e3o definidos com chaves ({}), diferenciando-se das listas. Vamos criar nossos pr\u00f3prios dicion\u00e1rios!","moduleNumber":1,"chapterNumber":4,"lessonNumber":4,"file":"vd1_501.mp4","footer":null,"youtube_id":"LXdv8zkCGDg","youtube_title":"[Curso Python 1.4.4] Dicion\u00e1rios: Chaves, Valores e Organiza\u00e7\u00e3o","video_contents":"Agora vamos aprender sobre dicion\u00e1rios em Python! Assim como um dicion\u00e1rio comum, eles armazenam pares de informa\u00e7\u00e3o: uma chave e um valor. Por exemplo: \"banana\": \"fruto da bananeira\". A chave \u00e9 como o verbete, e o valor \u00e9 a explica\u00e7\u00e3o. Os dicion\u00e1rios s\u00e3o definidos entre chaves ({}), enquanto listas usam colchetes ([]). E aten\u00e7\u00e3o: n\u00e3o confunda o s\u00edmbolo chaves (delimitador) com o termo chave (parte do par chave-valor). Dicion\u00e1rios permitem organizar dados de forma clara e estruturada, o que o Python adora! Vamos criar nossos pr\u00f3prios dicion\u00e1rios!"},{"id":97307,"chapterId":19201,"title":"Criando Seu Primeiro Dicion\u00e1rio","description":"Vamos colocar em pr\u00e1tica o uso dos dicion\u00e1rios em Python! Iremos criar uma vari\u00e1vel chamada 'person' e definir seu dicion\u00e1rio com chaves ({}). Incluiremos pares chave-valor como \"name\": \"Amanda\", e n\u00fameros para \"height\" e \"weight\". Por fim, exibiremos o conte\u00fado usando print(person).","moduleNumber":1,"chapterNumber":4,"lessonNumber":5,"file":"vd1_502.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"0_-zcnvjqC8","youtube_title":"[Curso Python 1.4.5] Criando Seu Primeiro Dicion\u00e1rio","video_contents":"Vamos colocar em pr\u00e1tica o uso dos dicion\u00e1rios em Python! Criamos uma vari\u00e1vel chamada person e usamos chaves ({}) para definir o dicion\u00e1rio. Inclu\u00edmos tr\u00eas pares chave-valor: \"name\" com o valor \"Amanda\", \"height\" com um n\u00famero, e \"weight\" com outro n\u00famero. As strings ficam entre aspas; os numbers, n\u00e3o. Colocamos cada par em uma linha separada para facilitar a leitura, embora n\u00e3o seja obrigat\u00f3rio. Por fim, usamos print(person) para exibir o conte\u00fado. Simples assim! Voc\u00ea ir\u00e1 criar e visualizar o seu primeiro dicion\u00e1rio."},{"id":67148,"chapterId":19201,"title":"Acessando Elementos em um Dicion\u00e1rio","description":"Agora n\u00f3s vamos focar em acessar elementos individuais em um dicion\u00e1rio. Utilizando o dicion\u00e1rio da atividade anterior, veja como obter valores espec\u00edficos usando colchetes e chaves. Compreenda os erros comuns e a import\u00e2ncia da pr\u00e1tica para dominar essa habilidade essencial.","moduleNumber":1,"chapterNumber":4,"lessonNumber":6,"file":"vd1_503.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"YKyIsi2fShw","youtube_title":"[Curso Python 1.4.6] Acessando Elementos em um Dicion\u00e1rio","video_contents":"Vamos trabalhar com o dicion\u00e1rio criado na atividade anterior. Agora, em vez de imprimir tudo, vamos acessar apenas um item, usando sua chave. Para isso, usamos colchetes com a chave entre aspas: person[\"name\"]. Pode parecer confuso no in\u00edcio, afinal s\u00e3o muitas coisas: par\u00eanteses, colchetes, chaves e aspas! Mas calma, \u00e9 normal errar no come\u00e7o. Se usar o delimitador errado ou esquecer as aspas, o Python mostrar\u00e1 uma mensagem de erro. O importante \u00e9 praticar! Com o tempo e a pr\u00e1tica, tudo isso far\u00e1 sentido. "},{"id":21824,"chapterId":19201,"title":"Adicionando Itens e Fazendo C\u00e1lculos no Dicion\u00e1rio","description":"Vamos avan\u00e7ar no uso dos dicion\u00e1rios! Nesta aula, adicionamos itens e realizamos c\u00e1lculos, como o IMC, a partir de dados armazenados. Integre o resultado como um novo par chave-valor, \"BMI\": valor. Aprenda a acessar e atualizar informa\u00e7\u00f5es de forma pr\u00e1tica e organizada em Python.","moduleNumber":1,"chapterNumber":4,"lessonNumber":7,"file":"vd1_504.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"OqSOSKfs524","youtube_title":"[Curso Python 1.4.7] Adicionando Itens e Fazendo C\u00e1lculos no Dicion\u00e1rio","video_contents":"Vamos avan\u00e7ar no uso dos dicion\u00e1rios! Agora, al\u00e9m de armazenar informa\u00e7\u00f5es, vamos realizar c\u00e1lculos. Criamos uma vari\u00e1vel BMI para calcular o IMC com base na altura e peso armazenados no dicion\u00e1rio. Em seguida, adicionamos esse novo dado ao pr\u00f3prio dicion\u00e1rio como um novo par chave-valor: \"BMI\": valor. Ao imprimir person, vemos que o dicion\u00e1rio foi atualizado com essa nova informa\u00e7\u00e3o. E claro, podemos acessar person[\"BMI\"] do mesmo jeito que fizemos com as outras chaves. Pr\u00e1tico, poderoso e bem-organizado, esse \u00e9 o jeito Python de trabalhar com dados!"},{"id":35067,"chapterId":63291,"title":"Listas e Dicion\u00e1rios: Entendendo as Diferen\u00e7as","description":"Agora vamos combinar dois conceitos fundamentais: listas e dicion\u00e1rios! Exploramos como listas, criadas com colchetes, armazenam dados em sequ\u00eancia. Dicion\u00e1rios, por outro lado, usam chaves para organizar pares de chave-valor. Aprenda as diferen\u00e7as essenciais entre essas estruturas.","moduleNumber":1,"chapterNumber":5,"lessonNumber":1,"file":"vd1_601.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"P5ZaRxKvsIg","youtube_title":"[Curso Python 1.5.1] Listas e Dicion\u00e1rios: Entendendo as Diferen\u00e7as","video_contents":"Agora vamos combinar dois conceitos importantes: listas e dicion\u00e1rios! Relembramos que listas s\u00e3o criadas com colchetes ([]) e armazenam v\u00e1rios dados em sequ\u00eancia, como nomes. J\u00e1 os dicion\u00e1rios usam chaves ({}) e organizam pares de chave-valor, como \"name\": \"Amanda\". Ambos podem ser escritos em uma \u00fanica linha ou com quebras para facilitar a leitura, o resultado ser\u00e1 o mesmo. A diferen\u00e7a \u00e9 que listas guardam elementos em s\u00e9rie, enquanto dicion\u00e1rios estruturam os dados."},{"id":90433,"chapterId":63291,"title":"Lista de Dicion\u00e1rios: Estruturando V\u00e1rios Dados","description":"Chegou a hora de unir tudo o que aprendemos: vamos criar uma lista de dicion\u00e1rios para estruturar dados complexos! Em vez de uma lista simples ou um \u00fanico dicion\u00e1rio, construiremos uma lista chamada 'persons', com dicion\u00e1rios individuais por pessoa, usando chaves como 'name', 'height' e 'weight'.","moduleNumber":1,"chapterNumber":5,"lessonNumber":2,"file":"vd1_602.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"AducRqDrBlg","youtube_title":"[Curso Python 1.5.2] Lista de Dicion\u00e1rios: Estruturando V\u00e1rios Dados","video_contents":"Chegou a hora de unir tudo o que aprendemos: vamos criar uma lista de dicion\u00e1rios! Em vez de uma lista com nomes ou um \u00fanico dicion\u00e1rio com dados de uma pessoa, agora teremos uma lista chamada persons, contendo v\u00e1rios dicion\u00e1rios, um para cada pessoa. Cada dicion\u00e1rio tem suas pr\u00f3prias chaves, como name, height e weight. Usar nomes de vari\u00e1veis claros, como persons, \u00e9 uma pr\u00e1tica recomendada por gentileza com outros programadores. Copiar e adaptar blocos de c\u00f3digo tamb\u00e9m \u00e9 comum e eficiente. "},{"id":67159,"chapterId":63291,"title":"Acessando e Percorrendo uma Lista de Dicion\u00e1rios","description":"Vamos explorar uma lista 'persons' contendo cinco dicion\u00e1rios, cada um representando uma pessoa. Voc\u00ea aprender\u00e1 a exibir toda a lista, acessar itens individuais por \u00edndice e atribuir 'persons[0]' a uma vari\u00e1vel. Tamb\u00e9m percorreremos a lista com um 'for', manipulando dados de forma clara e organizada.","moduleNumber":1,"chapterNumber":5,"lessonNumber":3,"file":"vd1_603.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"9zENiCgLp84","youtube_title":"[Curso Python 1.5.3] Acessando e Percorrendo uma Lista de Dicion\u00e1rios","video_contents":"Nessa atividade, veremos uma lista persons com cinco dicion\u00e1rios, cada um representando uma pessoa. Podemos exibir tudo com um print(), mas tamb\u00e9m acessar itens individuais usando o \u00edndice, lembrando que o primeiro item est\u00e1 na posi\u00e7\u00e3o 0. Ao atribuir persons[0] a uma vari\u00e1vel chamada person, conseguimos acessar diretamente dados como person[\"name\"]. E como j\u00e1 aprendemos, tamb\u00e9m podemos percorrer a lista com um \u201cfor\u201d, acessando cada dicion\u00e1rio de forma sequencial. Assim, conseguimos manipular e exibir informa\u00e7\u00f5es com clareza e organiza\u00e7\u00e3o."},{"id":50899,"chapterId":63291,"title":"Calculando e Exibindo o IMC com Coment\u00e1rios","description":"Vamos explorar listas e dicion\u00e1rios calculando o IMC. Comentaremos o c\u00f3digo com # para facilitar a compreens\u00e3o. Calculamos o IMC acessando altura e peso dos dicion\u00e1rios, adicionando o campo \"BMI\". Por fim, imprimimos nome e IMC de cada pessoa, seguidos por uma linha decorativa de tra\u00e7os.","moduleNumber":1,"chapterNumber":5,"lessonNumber":4,"file":"vd1_604.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"c3lnQUO-AUQ","youtube_title":"[Curso Python 1.5.4] Calculando e Exibindo o IMC com Coment\u00e1rios","video_contents":"Vamos continuar nossa jornada com listas e dicion\u00e1rios! Agora, adicionamos coment\u00e1rios ao c\u00f3digo usando o s\u00edmbolo # para explicar o que cada parte faz, uma pr\u00e1tica importante e gentil com quem vai ler o c\u00f3digo depois. Em seguida, calculamos o IMC de cada pessoa da lista persons, acessando altura e peso dentro dos dicion\u00e1rios e adicionando um novo campo \"BMI\". Depois, usamos um for para imprimir o nome e o IMC de cada um, seguidos por uma linha com 50 tra\u00e7os (\"-\" * 50) para organizar visualmente."},{"id":57557,"chapterId":63291,"title":"Classificando o IMC com Condicionais","description":"Chegamos \u00e0 etapa final deste m\u00f3dulo! Usaremos if, elif e else para determinar o status de sa\u00fade com base no IMC. Aprenderemos a adicionar essas informa\u00e7\u00f5es ao dicion\u00e1rio, lembrando da sintaxe correta para condicionais. Ao final, cada pessoa ter\u00e1 seu IMC e status calculado com precis\u00e3o.","moduleNumber":1,"chapterNumber":5,"lessonNumber":5,"file":"vd1_605.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"Ga30U_wHzxo","youtube_title":"[Curso Python 1.5.5] Classificando o IMC com Condicionais","video_contents":"Chegamos \u00e0 etapa final deste m\u00f3dulo! Vamos usar o if, elif e else para adicionar uma nova informa\u00e7\u00e3o ao nosso dicion\u00e1rio: o status da pessoa com base no IMC. Usamos as mesmas regras que j\u00e1 aprendemos: cada condi\u00e7\u00e3o termina com dois pontos, e o bloco abaixo deve estar indentado. Claro, pequenos erros como esquecer os dois pontos s\u00e3o normais, e facilmente corrigidos! Ao final, cada pessoa ter\u00e1 seu IMC e o respectivo status (abaixo do peso, normal ou sobrepeso). O resultado ficou incr\u00edvel!"},{"id":10849,"chapterId":63291,"title":"Revisando o C\u00f3digo Final","description":"Iremos revisar o c\u00f3digo final deste m\u00f3dulo, dividido em dois blocos principais: uma lista de dicion\u00e1rios e um loop 'for'. No primeiro, manipulamos dados em strings e n\u00fameros. No segundo, calculamos o IMC e determinamos o status de cada pessoa usando 'if', 'elif' e 'else'. Coment\u00e1rios '#', garantem clareza.","moduleNumber":1,"chapterNumber":5,"lessonNumber":6,"file":"vd1_606.mp4","footer":null,"youtube_id":"oTBvITacVZg","youtube_title":"[Curso Python 1.5.6] Revisando o C\u00f3digo Final","video_contents":"Nessa atividade vamos revisar o c\u00f3digo final deste m\u00f3dulo! Ele est\u00e1 dividido em dois blocos principais. O primeiro \u00e9 uma lista de dicion\u00e1rios, organizada com colchetes e chaves, contendo dados como strings (com aspas) e numbers (sem aspas). O segundo \u00e9 um loop com for, onde percorremos a lista para calcular o IMC (bmi) e determinar o status de cada pessoa com if, elif e else. Finalizamos com um print() bem formatado, e todo o c\u00f3digo est\u00e1 comentado com # para facilitar a leitura. "},{"id":48239,"chapterId":96478,"title":"Explorando Conceitos e Ferramentas Avan\u00e7adas","description":"Agora n\u00f3s vamos revisar conceitos fundamentais e explorar novas ideias avan\u00e7adas. Iremos instalar e utilizar ferramentas poderosas para o desenvolvimento de aplica\u00e7\u00f5es em Python, tudo explicado com clareza para garantir sua evolu\u00e7\u00e3o segura e confiante no aprendizado.","moduleNumber":2,"chapterNumber":1,"lessonNumber":1,"file":"vd2_001.mp4","footer":null,"youtube_id":"eklTM-6GaC0","youtube_title":"[Curso Python 2.1.1] Explorando Conceitos e Ferramentas Avan\u00e7adas","video_contents":"Neste segundo m\u00f3dulo, vamos revisar os conceitos fundamentais j\u00e1 vistos e avan\u00e7ar com novas ideias que se conectam a eles. Em seguida, daremos um passo importante ao aprender como instalar e utilizar ferramentas mais poderosas para o desenvolvimento de aplica\u00e7\u00f5es em Python. Tudo ser\u00e1 explicado com clareza e aten\u00e7\u00e3o aos detalhes, para garantir que voc\u00ea siga evoluindo com seguran\u00e7a e confian\u00e7a nessa jornada de aprendizado."},{"id":27493,"chapterId":48796,"title":"Blocos de C\u00f3digo e a Import\u00e2ncia da Identa\u00e7\u00e3o","description":"Neste encontro, revisaremos blocos de c\u00f3digo em Python. Entenda a import\u00e2ncia da indenta\u00e7\u00e3o, que define o conte\u00fado de um bloco. Lembre-se do if: ap\u00f3s os dois pontos, linhas com a mesma indenta\u00e7\u00e3o pertencem ao bloco. Pratique com exemplos claros, preparando-se para estruturas mais complexas.","moduleNumber":2,"chapterNumber":2,"lessonNumber":1,"file":"vd2_101.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"tWHGeyI2wSY","youtube_title":"[Curso Python 2.2.1] Blocos de C\u00f3digo e a Import\u00e2ncia da Identa\u00e7\u00e3o","video_contents":"Neste encontro, vamos revisar o conceito de blocos de c\u00f3digo em Python. Voc\u00ea vai entender por que a indenta\u00e7\u00e3o \u00e9 essencial e como ela define o que est\u00e1 dentro de um bloco. Lembra do if? Ap\u00f3s os dois pontos, todas as linhas com a mesma indenta\u00e7\u00e3o pertencem ao mesmo bloco. Vamos praticar esse conceito com exemplos simples e claros, preparando o terreno para estruturas mais complexas ao longo do curso."},{"id":66290,"chapterId":48796,"title":"Revisando Blocos com Exemplo Pr\u00e1tico","description":"Agora vamos revisar juntos um exemplo pr\u00e1tico para refor\u00e7ar blocos de c\u00f3digo em Python. Note que linhas com dois pontos indicam blocos, onde as instru\u00e7\u00f5es alinhadas fazem parte. Com isso, escrever c\u00f3digos organizados e funcionais se tornar\u00e1 mais natural para voc\u00ea.","moduleNumber":2,"chapterNumber":2,"lessonNumber":2,"file":"vd2_102.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"MIDCFMBwsNc","youtube_title":"[Curso Python 2.2.2] Revisando Blocos com Exemplo Pr\u00e1tico","video_contents":"Agora vamos revisar juntos um exemplo pr\u00e1tico do m\u00f3dulo anterior para refor\u00e7ar o conceito de blocos de c\u00f3digo em Python. Voc\u00ea vai observar que, sempre que uma linha termina com dois pontos, as instru\u00e7\u00f5es que seguem com a mesma indenta\u00e7\u00e3o fazem parte de um mesmo bloco. Com esse entendimento, escrever c\u00f3digos mais organizados e funcionais se tornar\u00e1 cada vez mais natural para voc\u00ea."},{"id":54712,"chapterId":67214,"title":"Criando Suas Pr\u00f3prias Fun\u00e7\u00f5es com DEF","description":"Exploraremos a cria\u00e7\u00e3o de fun\u00e7\u00f5es personalizadas em Python usando a palavra-chave def. Aprenda a estruturar blocos de c\u00f3digo reutiliz\u00e1veis e descubra como fun\u00e7\u00f5es bem definidas melhoram a clareza e a efici\u00eancia dos seus projetos. Construa a base para escrever c\u00f3digos mais organizados e potentes.","moduleNumber":2,"chapterNumber":3,"lessonNumber":1,"file":"vd2_201.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"DWtIVTMM33U","youtube_title":"[Curso Python 2.3.1] Criando Suas Pr\u00f3prias Fun\u00e7\u00f5es com DEF","video_contents":"Chegou a hora de aprender um novo tipo de bloco: as fun\u00e7\u00f5es personalizadas! Em Python, usamos a palavra-chave def seguida de par\u00eanteses e dois pontos para criar uma fun\u00e7\u00e3o. As linhas com a mesma indenta\u00e7\u00e3o ap\u00f3s os dois pontos pertencem ao bloco dessa fun\u00e7\u00e3o. Por enquanto, nosso c\u00f3digo ainda n\u00e3o executa nada, mas j\u00e1 estamos construindo uma estrutura reutiliz\u00e1vel. Criar suas pr\u00f3prias fun\u00e7\u00f5es \u00e9 um passo fundamental para escrever c\u00f3digos mais limpos, organizados e poderosos."},{"id":68974,"chapterId":67214,"title":"Entendendo Par\u00e2metros e Retornos em Fun\u00e7\u00f5es","description":"Agora n\u00f3s vamos explorar fun\u00e7\u00f5es personalizadas em Python. Usaremos 'def' para definir a fun\u00e7\u00e3o 'get_status', que recebe o par\u00e2metro 'bmi'. Retornaremos valor com 'return', permitindo que voc\u00ea entenda como criar fun\u00e7\u00f5es que aceitam entradas e devolvem resultados \u00fateis.","moduleNumber":2,"chapterNumber":3,"lessonNumber":2,"file":"vd2_202.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"891gh2Do9bI","youtube_title":"[Curso Python 2.3.2] Entendendo Par\u00e2metros e Retornos em Fun\u00e7\u00f5es","video_contents":"Vamos continuar explorando a fun\u00e7\u00e3o que criamos. Usamos def para definir a fun\u00e7\u00e3o e damos a ela o nome get_status, um nome sugestivo do que ela faz. Entre par\u00eanteses, indicamos que a fun\u00e7\u00e3o espera receber um par\u00e2metro chamado bmi, mas esse nome pode ser qualquer um, desde que fa\u00e7a sentido. Por fim, usamos a palavra return para indicar que a fun\u00e7\u00e3o ir\u00e1 devolver um resultado. Com isso, voc\u00ea j\u00e1 come\u00e7a a dominar o uso de fun\u00e7\u00f5es personalizadas em Python!"},{"id":15647,"chapterId":67214,"title":"Reutilizando Fun\u00e7\u00f5es e Simplificando o C\u00f3digo","description":"Agora vamos integrar a fun\u00e7\u00e3o personalizada ao nosso c\u00f3digo principal. Primeiro, imprimimos o BMI. Em seguida, utilizamos a fun\u00e7\u00e3o get_status para simplificar e organizar. As fun\u00e7\u00f5es evitam repeti\u00e7\u00f5es, deixam o c\u00f3digo limpo e s\u00e3o reutiliz\u00e1veis, expandindo nosso vocabul\u00e1rio em Python.","moduleNumber":2,"chapterNumber":3,"lessonNumber":3,"file":"vd2_203.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"bk-BDbkeEk8","youtube_title":"[Curso Python 2.3.3] Reutilizando Fun\u00e7\u00f5es e Simplificando o C\u00f3digo","video_contents":"Agora vamos integrar a fun\u00e7\u00e3o personalizada ao nosso c\u00f3digo principal. Primeiro, imprimimos o BMI. Depois, usamos a fun\u00e7\u00e3o get_status que criamos para deixar tudo mais simples e organizado. Isso mostra o poder das fun\u00e7\u00f5es: elas evitam repeti\u00e7\u00f5es, deixam o c\u00f3digo mais limpo e podem ser reutilizadas quantas vezes quisermos. \u00c9 como se estiv\u00e9ssemos expandindo o vocabul\u00e1rio do Python com comandos criados por n\u00f3s mesmos!"},{"id":75648,"chapterId":68749,"title":"Organizando o C\u00f3digo em M\u00faltiplos Arquivos","description":"Agora, vamos organizar seu c\u00f3digo em m\u00faltiplos arquivos. Iremos separar a fun\u00e7\u00e3o get_status em myFunction.py e o restante em app.py, o que facilita a manuten\u00e7\u00e3o. Aprenderemos a usar o comando import e exploraremos um editor mais avan\u00e7ado, essencial para projetos maiores.","moduleNumber":2,"chapterNumber":4,"lessonNumber":1,"file":"vd2_301.mp4","footer":null,"youtube_id":"IiYVLYB8jaU","youtube_title":"[Curso Python 2.4.1] Organizando o C\u00f3digo em M\u00faltiplos Arquivos","video_contents":"Neste momento, organizamos o c\u00f3digo separando a fun\u00e7\u00e3o get_status em um arquivo chamado myFunction.py e o restante do c\u00f3digo em app.py. Isso facilita a reutiliza\u00e7\u00e3o e manuten\u00e7\u00e3o do c\u00f3digo. Para que funcione, usamos o comando import seguido do nome do arquivo (sem .py). Repare tamb\u00e9m que estamos usando um editor mais avan\u00e7ado, necess\u00e1rio quando lidamos com v\u00e1rios arquivos. N\u00e3o se preocupe: na segunda parte do m\u00f3dulo, explicaremos tudo sobre esse novo ambiente."},{"id":35482,"chapterId":68749,"title":"Usando import para Reutilizar Fun\u00e7\u00f5es","description":"Agora vamos importar a fun\u00e7\u00e3o get_status para nosso c\u00f3digo principal usando import. Isso torna o c\u00f3digo mais modular e organizado. Utilize o nome do arquivo sem .py e chame com myFunction.get_status(). Em breve, exploraremos como gerenciar melhor essas mensagens no console.","moduleNumber":2,"chapterNumber":4,"lessonNumber":2,"file":"vd2_302.mp4","footer":null,"youtube_id":"Ix_pXrEfTvo","youtube_title":"[Curso Python 2.4.2] Usando import para Reutilizar Fun\u00e7\u00f5es","video_contents":"Agora vamos importar a fun\u00e7\u00e3o get_status para nosso c\u00f3digo principal com a express\u00e3o import. Basta usar o nome do arquivo onde est\u00e1 a fun\u00e7\u00e3o (sem .py) e, depois, chamar a fun\u00e7\u00e3o com myFunction.get_status(). Isso deixa o c\u00f3digo mais modular e organizado. Ao rodar, o resultado pode aparecer junto de outras mensagens, mas n\u00e3o se preocupe, em breve, vamos explorar isso com mais profundidade para que tudo fa\u00e7a sentido!"},{"id":14596,"chapterId":68749,"title":"Python, Comunidade Global e o Poder do PyPI","description":"Explore como o Python vai al\u00e9m de uma linguagem: \u00e9 uma vibrante comunidade global. Entenda o papel da Python Software Foundation e a for\u00e7a do PyPI, onde milhares colaboram. Aprenda a usar o comando import para aproveitar essas contribui\u00e7\u00f5es e ampliar as possibilidades de seus projetos.","moduleNumber":2,"chapterNumber":4,"lessonNumber":3,"file":"vd2_303.mp4","footer":null,"youtube_id":"RDG1nVSEWsY","youtube_title":"[Curso Python 2.4.3] Python, Comunidade Global e o Poder do PyPI","video_contents":"O Python \u00e9 muito mais do que uma linguagem de programa\u00e7\u00e3o, \u00e9 uma comunidade global. Atrav\u00e9s da Python Software Foundation, milhares de volunt\u00e1rios contribuem com fun\u00e7\u00f5es, bibliotecas e ferramentas que est\u00e3o dispon\u00edveis no PyPI (Python Package Index). Com o comando import, voc\u00ea pode acessar essas contribui\u00e7\u00f5es e fazer praticamente qualquer coisa com Python. Isso transforma a linguagem em uma poderosa plataforma aberta, colaborativa e em constante evolu\u00e7\u00e3o."},{"id":17745,"chapterId":68749,"title":"Exemplo de import: pacote datetime","description":"Agora vamos explorar o pacote datetime para manipula\u00e7\u00e3o de datas. Ap\u00f3s entender que strings e n\u00fameros n\u00e3o lidam bem com datas, veremos como o datetime resolve essa limita\u00e7\u00e3o. Descubra como evitar erros como TypeError ao subtrair datas, usando este poderoso recurso do Python.","moduleNumber":2,"chapterNumber":4,"lessonNumber":4,"file":"vd2_304.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"4wgs13WauD4","youtube_title":"[Curso Python 2.4.4] Exemplo de import: pacote datetime","video_contents":"A t\u00edtulo de exemplo do recurso import, vamos explorar um dos pacotes mais populares do Python: o datetime. No m\u00f3dulo anterior, vimos as diferen\u00e7as entre strings e n\u00fameros. Agora, percebemos que nenhum desses formatos \u00e9 adequado para lidar com datas. Ao tentar subtrair datas como strings, o Python exibe um erro TypeError: unsupported operand type. Isso acontece porque ele n\u00e3o reconhece que se trata de datas. "},{"id":20351,"chapterId":68749,"title":"Mais Exemplos Usando o datetime","description":"Agora vamos explorar o pacote datetime, importando-o com o apelido dt para clareza no c\u00f3digo. Com ele, criaremos datas reais e faremos opera\u00e7\u00f5es, como subtra\u00e7\u00f5es entre datas, obtendo a diferen\u00e7a em dias. O datetime \u00e9 extenso, com muitas funcionalidades a explorar na documenta\u00e7\u00e3o.","moduleNumber":2,"chapterNumber":4,"lessonNumber":5,"file":"vd2_305.mp4","footer":"Agora \u00e9 com voc\u00ea! Clique [[[EDITOR]]] e carregue o editor para praticar.","youtube_id":"w9PdKCNf3dw","youtube_title":"[Curso Python 2.4.5] Mais Exemplos Usando o datetime","video_contents":"Agora vamos importar o pacote datetime e dar a ele um apelido (dt) para facilitar a leitura do c\u00f3digo. Com a fun\u00e7\u00e3o datetime, podemos criar datas reais usando ano, m\u00eas e dia, sempre nessa ordem. Assim, conseguimos realizar opera\u00e7\u00f5es como subtra\u00e7\u00f5es entre datas, que retornam o n\u00famero de dias entre elas. Esse \u00e9 s\u00f3 um exemplo: o pacote datetime \u00e9 bem completo e possui v\u00e1rias outras funcionalidades que voc\u00ea poder\u00e1 explorar na documenta\u00e7\u00e3o oficial."},{"id":90210,"chapterId":35048,"title":"Ambientes IDE: Web ou Local","description":"Chegou a hora de explorar o uso de Python em uma IDE. Vamos comparar ambientes web, como Jupyter Lab e Google Colab, \u00f3timos para iniciantes, com ambientes locais, como o popular Visual Studio Code. Descubra por que o VS Code \u00e9 a escolha ideal para projetos robustos e como utiliz\u00e1-lo efetivamente.","moduleNumber":2,"chapterNumber":5,"lessonNumber":1,"file":"vd2_401.mp4","footer":null,"youtube_id":"3GbTNltfAoc","youtube_title":"[Curso Python 2.5.1] Ambientes IDE: Web ou Local","video_contents":"Chegou a hora de dar um passo importante: usar Python em uma IDE, Integrated Development Environment, ou Ambiente Integrado de Desenvolvimento. Existem duas categorias: os ambientes web, como Jupyter Lab e Google Colab, \u00f3timos para come\u00e7ar; e os ambientes locais, como o Visual Studio Code, ideais para projetos mais robustos. Minha dica? V\u00e1 direto para o VS Code. Ele \u00e9 gratuito, completo e o mais usado no mundo. \u00c9 com ele que vamos seguir a partir de agora."},{"id":80145,"chapterId":35048,"title":"Instalando o Python no Seu Computador","description":"Vamos iniciar configurando seu ambiente local ao instalar o Python. Acesse python.org, baixe a vers\u00e3o mais recente na aba 'Downloads' e execute o instalador. Com o Python pronto, voc\u00ea pode come\u00e7ar a programar localmente e usar editores como o VS Code futuramente.","moduleNumber":2,"chapterNumber":5,"lessonNumber":2,"file":"vd2_402.mp4","footer":null,"youtube_id":"25jJidriWrE","youtube_title":"[Curso Python 2.5.2] Instalando o Python no Seu Computador","video_contents":"Vamos come\u00e7ar a configurar seu ambiente local instalando o Python. Acesse o site oficial python.org, clique na aba \u201cDownloads\u201d e baixe a vers\u00e3o mais recente. Ap\u00f3s o download, execute o instalador e aguarde a conclus\u00e3o. Pronto! Agora voc\u00ea tem o Python instalado no seu computador e j\u00e1 pode come\u00e7ar a programar localmente. Essa \u00e9 a base para usarmos editores como o VS Code nas pr\u00f3ximas etapas."},{"id":50620,"chapterId":35048,"title":"Instalando e Configurando o VS Code","description":"Vamos instalar o Visual Studio Code como nosso ambiente de desenvolvimento. Acesse o site oficial, fa\u00e7a o download e siga as configura\u00e7\u00f5es padr\u00e3o. Em seguida, abrimos o VS Code, acessamos a aba \u201cExtensions\u201d e instalamos as extens\u00f5es Python e Jupyter para maximizar sua produtividade com Python.","moduleNumber":2,"chapterNumber":5,"lessonNumber":3,"file":"vd2_403.mp4","footer":null,"youtube_id":"Iu0IkzkWbsw","youtube_title":"[Curso Python 2.5.3] Instalando e Configurando o VS Code","video_contents":"Vamos instalar o Visual Studio Code, nosso ambiente de desenvolvimento local. Acesse o site oficial, clique em \u201cDownload\u201d e instale com as configura\u00e7\u00f5es padr\u00e3o. Em seguida, abrimos o VS Code e instalamos duas extens\u00f5es essenciais: Python (para executar seus c\u00f3digos) e Jupyter (para notebooks interativos). Basta ir na aba \u201cExtensions\u201d (\u00edcone dos quadradinhos), buscar pelos nomes, instalar e pronto! Agora seu VS Code est\u00e1 pronto para rodar Python com facilidade e efici\u00eancia."},{"id":23650,"chapterId":35048,"title":"Seu Primeiro Arquivo Python no VS Code","description":"Chegou a hora de criar seu primeiro arquivo Python no VS Code! Aprenda a abrir uma pasta e a import\u00e2ncia de trabalhar dentro delas. Crie o arquivo 'app.py' e escreva seu primeiro comando: print(\"Hello\"). Execute o c\u00f3digo e veja-o funcionando. Um pequeno passo para sua jornada como programador.","moduleNumber":2,"chapterNumber":5,"lessonNumber":4,"file":"vd2_404.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"Nz-F_Lw8MqM","youtube_title":"[Curso Python 2.5.4] Seu Primeiro Arquivo Python no VS Code","video_contents":"Chegou a hora de criar seu primeiro arquivo Python no VS Code! Abra uma pasta pelo menu \u201cFile > Open Folder\u201d, trabalhar dentro de pastas \u00e9 fundamental. No exemplo, usamos a pasta \u201cTeste\u201d. Clique em \u201cNew File\u201d e crie o arquivo app.py. Agora escreva um comando simples, como print(\"Hello\"), e clique no \u00edcone de execu\u00e7\u00e3o no canto superior direito. Pronto! Seu c\u00f3digo foi executado com sucesso. Um pequeno passo para voc\u00ea, um grande passo como programador."},{"id":52013,"chapterId":35048,"title":"Rodando Arquivos .ipynb com Jupyter no VS Code","description":"Agora n\u00f3s vamos explorar como rodar arquivos .ipynb no VS Code. Criaremos o arquivo app.ipynb, adequado ao Jupyter, permitindo a execu\u00e7\u00e3o de blocos de c\u00f3digo em c\u00e9lulas com sa\u00eddas imediatas. Gra\u00e7as \u00e0 extens\u00e3o Jupyter, essa funcionalidade \u00e9 habilitada. Mensagens de seguran\u00e7a podem surgir inicialmente.","moduleNumber":2,"chapterNumber":5,"lessonNumber":5,"file":"vd2_405.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"SgL4m2i-w4U","youtube_title":"[Curso Python 2.5.5] Rodando Arquivos .ipynb com Jupyter no VS Code","video_contents":"Agora criamos um novo tipo de arquivo: app.ipynb, o formato usado pelo Jupyter. Esse tipo de arquivo permite rodar blocos de c\u00f3digo em c\u00e9lulas, com sa\u00edda imediata logo abaixo. Isso \u00e9 poss\u00edvel gra\u00e7as \u00e0 extens\u00e3o do Jupyter que instalamos anteriormente. Na primeira execu\u00e7\u00e3o, algumas mensagens de seguran\u00e7a ou instala\u00e7\u00e3o extra podem aparecer, \u00e9 normal. Parab\u00e9ns por chegar at\u00e9 aqui!"},{"id":76575,"chapterId":59227,"title":"Introdu\u00e7\u00e3o ao M\u00f3dulo de Dados e IA","description":"Agora vamos iniciar um m\u00f3dulo crucial que integra conceitos anteriores. Ser\u00e1 desafiador, mas cada passo ser\u00e1 detalhado. Transcreva os c\u00f3digos para o VS Code ap\u00f3s cada v\u00eddeo. A pr\u00e1tica \u00e9 vital: digite, teste, altere e aprenda com os erros. Sua dedica\u00e7\u00e3o trar\u00e1 frutos na jornada com Python.","moduleNumber":3,"chapterNumber":1,"lessonNumber":1,"file":"vd3_001.mp4","footer":null,"youtube_id":"KeGtBnAayMk","youtube_title":"[Curso Python 3.1.1] Introdu\u00e7\u00e3o ao M\u00f3dulo de Dados e IA","video_contents":"Agora vamos iniciar um m\u00f3dulo muito importante, que ir\u00e1 integrar conceitos dos m\u00f3dulos anteriores. Essa fase ser\u00e1 um pouco mais desafiadora, mas cada passo ser\u00e1 explicado detalhadamente. \u00c9 essencial que voc\u00ea transcreva os c\u00f3digos mostrados para o seu VS Code ao final de cada v\u00eddeo. A pr\u00e1tica \u00e9 fundamental para dominar este conte\u00fado, ent\u00e3o ap\u00f3s cada li\u00e7\u00e3o, digite o c\u00f3digo, fa\u00e7a testes, altere par\u00e2metros e aprenda com os erros. Sua dedica\u00e7\u00e3o agora render\u00e1 frutos na sua jornada com Python."},{"id":94036,"chapterId":59227,"title":"Instala\u00e7\u00e3o de Pacotes com PIP","description":"Vamos aprender a instalar pacotes essenciais utilizando o pip. Iniciaremos verificando a configura\u00e7\u00e3o atrav\u00e9s do comando 'pip list'. Caso necess\u00e1rio, ajustaremos o path nas vari\u00e1veis de ambiente. Ap\u00f3s isso, prosseguiremos com a instala\u00e7\u00e3o, facilitando a gest\u00e3o de pacotes em Python de maneira pr\u00e1tica e eficiente.","moduleNumber":3,"chapterNumber":1,"lessonNumber":2,"file":"vd3_002.mp4","footer":null,"youtube_id":"yEuasJJyUEc","youtube_title":"[Curso Python 3.1.2] Instala\u00e7\u00e3o de Pacotes com PIP","video_contents":"Vamos aprender a instalar os pacotes necess\u00e1rios para este m\u00f3dulo utilizando o comando pip. Primeiro, abra o prompt de comando ou terminal, e verifique se o pip est\u00e1 reconhecido com o comando 'pip list'. Caso contr\u00e1rio, faremos a configura\u00e7\u00e3o correta. Ap\u00f3s ajustar o path nas vari\u00e1veis de ambiente do sistema, voc\u00ea estar\u00e1 apto a instalar pacotes. Vamos ent\u00e3o prosseguir com a instala\u00e7\u00e3o dos pacotes essenciais para o curso. Veremos como facilitar o processo de instala\u00e7\u00e3o e gest\u00e3o de pacotes em Python de forma pr\u00e1tica e eficiente."},{"id":74631,"chapterId":59227,"title":"Configura\u00e7\u00e3o do Ambiente de Trabalho","description":"Vamos preparar o ambiente para o m\u00f3dulo 3 em Python. Crie uma pasta \"modulo3\", baixe o arquivo \"profiles.xlsx\" e mova-o para a pasta. Abra o Visual Studio Code e acesse \"modulo3\". Essa configura\u00e7\u00e3o inicial \u00e9 essencial para as atividades pr\u00e1ticas do curso.","moduleNumber":3,"chapterNumber":1,"lessonNumber":3,"file":"vd3_003.mp4","footer":"Clique <a href=\"https:\/\/www.solvertank.tech\/solverpy\/files\/profiles.xlsx\">AQUI<\/a> para baixar o arquivo \"profiles.xlsx\"","youtube_id":"WPwcaZ0RGOY","youtube_title":"[Curso Python 3.1.3] Configura\u00e7\u00e3o do Ambiente de Trabalho","video_contents":"Vamos preparar o ambiente para as atividades do m\u00f3dulo 3 em Python. Crie uma pasta nomeada \"modulo3\" em seu computador. Em seguida, baixe o arquivo \"profiles.xlsx\" atrav\u00e9s do link dispon\u00edvel. Mova o arquivo baixado para a pasta criada. Agora, abra o Visual Studio Code e acesse a pasta \"modulo3\". Se feito corretamente, voc\u00ea ver\u00e1 o arquivo na lista, embora o VS Code n\u00e3o exiba seu conte\u00fado por padr\u00e3o. Essa configura\u00e7\u00e3o inicial \u00e9 essencial para prosseguirmos com as atividades pr\u00e1ticas do curso."},{"id":61453,"chapterId":59227,"title":"Criando e Executando Notebooks","description":"Agora n\u00f3s vamos explorar a cria\u00e7\u00e3o e gest\u00e3o de notebooks no Jupyter. Iremos criar o arquivo 'app.ipynb', inserir comandos em Python e executar para garantir seu funcionamento. Voc\u00ea ver\u00e1 a cria\u00e7\u00e3o de 'modulo3' com 'app.ipynb' e 'profiles'. Essa aula \u00e9 crucial para organizar e executar c\u00f3digos Python eficientemente.","moduleNumber":3,"chapterNumber":1,"lessonNumber":4,"file":"vd3_004.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"tLqdU5r-BwI","youtube_title":"[Curso Python 3.1.4] Criando e Executando Notebooks","video_contents":"Agora n\u00f3s vamos aprender a criar e gerenciar notebooks no Jupyter. Primeiramente, vamos criar um novo arquivo chamado 'app.ipynb'. Certifique-se de abrir uma nova c\u00e9lula de c\u00f3digo e escolher a op\u00e7\u00e3o Python. Escreva um comando 'print' simples e execute-o para verificar se tudo est\u00e1 funcionando corretamente. Se seguir essas etapas, voc\u00ea ver\u00e1 que a pasta 'modulo3' foi criada com dois arquivos: 'app.ipynb' e 'profiles'. Essa aula \u00e9 essencial para entender como organizar e executar c\u00f3digos Python em notebooks, facilitando o desenvolvimento e a comunica\u00e7\u00e3o de ideias."},{"id":97318,"chapterId":52319,"title":"Introdu\u00e7\u00e3o ao Pandas: Manipula\u00e7\u00e3o de Dados","description":"Essa aula \u00e9 sobre o poderoso pacote Pandas, essencial para manipula\u00e7\u00e3o de dados em Python. Exploraremos suas funcionalidades, como importar bibliotecas, criar DataFrames e executar opera\u00e7\u00f5es de filtragem e agrupamento. Com o Pandas, a an\u00e1lise de dados torna-se mais simples e eficiente.","moduleNumber":3,"chapterNumber":2,"lessonNumber":1,"file":"vd3_101.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"SoFHfQ_1JrU","youtube_title":"[Curso Python 3.2.1] Introdu\u00e7\u00e3o ao Pandas: Manipula\u00e7\u00e3o de Dados","video_contents":"Essa aula \u00e9 sobre o poderoso pacote Pandas, essencial para manipula\u00e7\u00e3o de dados em Python. Vamos explorar suas funcionalidades, que ajudam a organizar, analisar e visualizar informa\u00e7\u00f5es de forma eficiente. Iremos aprender a importar bibliotecas, criar DataFrames e realizar opera\u00e7\u00f5es b\u00e1sicas de filtragem e agrupamento. Com o Pandas, muitos desafios de an\u00e1lise de dados tornam-se mais simples, tornando-se uma ferramenta indispens\u00e1vel para quem atua com dados."},{"id":37521,"chapterId":52319,"title":"Filtragem de Dados com Pandas","description":"Iremos abordar a sele\u00e7\u00e3o de colunas espec\u00edficas em dataframes com Pandas para clareza visual. Voc\u00ea aprender\u00e1 a criar listas de nomes de colunas para filtragem horizontal e como definir condi\u00e7\u00f5es com '==', permitindo a filtragem vertical. Por fim, combinaremos m\u00e9todos para uma an\u00e1lise completa. Esses fundamentos suportam an\u00e1lises avan\u00e7adas.","moduleNumber":3,"chapterNumber":2,"lessonNumber":2,"file":"vd3_102.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"BP5G_UKwx5g","youtube_title":"[Curso Python 3.2.2] Filtragem de Dados com Pandas","video_contents":"Iremos abordar como selecionar colunas espec\u00edficas de um dataframe para visualizar dados de forma mais clara. Voc\u00ea aprender\u00e1 a criar listas com nomes de colunas para filtrar horizontalmente. Al\u00e9m disso, veremos como definir condi\u00e7\u00f5es utilizando o sinal duplo de igual, permitindo filtrar linhas espec\u00edficas, ou seja, visualizando dados verticalmente. Por fim, combinaremos ambos os m\u00e9todos para uma an\u00e1lise completa, mostrando como manipular visualiza\u00e7\u00f5es no Pandas. Esses fundamentos ser\u00e3o a base para an\u00e1lises de dados avan\u00e7adas."},{"id":45896,"chapterId":52319,"title":"Fazendo Loops em DataFrames","description":"Vamos explorar como utilizar loops para iterar sobre DataFrames em Python. Focaremos no m\u00e9todo \"iterrows\" para navegar por cada linha como uma lista de dicion\u00e1rios. Voc\u00ea ir\u00e1 compreender a import\u00e2ncia dessa t\u00e9cnica, essencial na manipula\u00e7\u00e3o de dados. Exemplos pr\u00e1ticos consolidar\u00e3o o aprendizado.","moduleNumber":3,"chapterNumber":2,"lessonNumber":3,"file":"vd3_103.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"GZp0Ep1mMzg","youtube_title":"[Curso Python 3.2.3] Fazendo Loops em DataFrames","video_contents":"Vamos explorar como utilizar loops para iterar sobre DataFrames em Python. Utilizaremos o m\u00e9todo \"iterrows\" para navegar por cada linha de um DataFrame, como se fosse uma lista de dicion\u00e1rios. Durante essa aula, faremos ajustes em loops tradicionais, adaptando-os para trabalhar com dados tabulares de forma eficiente. Voc\u00ea ir\u00e1 compreender a import\u00e2ncia e a aplica\u00e7\u00e3o dessa t\u00e9cnica, que \u00e9 fundamental para manipula\u00e7\u00e3o de dados em Python. Vamos refor\u00e7ar o conceito com exemplos pr\u00e1ticos para consolidar o aprendizado."},{"id":14421,"chapterId":52319,"title":"Manipulando e Salvando DataFrames","description":"Agora n\u00f3s vamos explorar a manipula\u00e7\u00e3o de DataFrames com Pandas. Veremos como listar e adicionar colunas, calculando o 'bmi'. Ap\u00f3s a cria\u00e7\u00e3o, verificaremos as altera\u00e7\u00f5es e aprenderemos a salvar em um novo Excel. Esta aula \u00e9 essencial para gerenciar dados de maneira eficaz e organizada.","moduleNumber":3,"chapterNumber":2,"lessonNumber":4,"file":"vd3_104.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"w6jIB33iwo4","youtube_title":"[Curso Python 3.2.4] Manipulando e Salvando DataFrames","video_contents":"Agora n\u00f3s vamos explorar como manipular DataFrames usando o Pandas. Veremos como listar e adicionar novas colunas, como a 'bmi', que calcula o \u00edndice de massa corp\u00f3rea. Ap\u00f3s criar essa coluna, vamos verificar a modifica\u00e7\u00e3o no DataFrame. Por \u00faltimo, aprenderemos a salvar as altera\u00e7\u00f5es em um novo arquivo Excel, mostrando que \u00e9 poss\u00edvel abrir, modificar e armazenar dados facilmente. Essa pr\u00e1tica \u00e9 fundamental para trabalhar com dados de forma eficiente e organizada. Vamos colocar tudo isso em a\u00e7\u00e3o!"},{"id":13200,"chapterId":52319,"title":"Fun\u00e7\u00f5es e Manipula\u00e7\u00e3o de DataFrames","description":"Vamos aprender a integrar fun\u00e7\u00f5es personalizadas em DataFrames, aplicando conhecimentos pr\u00e9vios. Focaremos na reutiliza\u00e7\u00e3o de fun\u00e7\u00f5es, como a que calcula o IMC, usando o comando apply para gerar novas colunas. Voc\u00ea observar\u00e1 o uso da fun\u00e7\u00e3o round para ajustar dados, garantindo resultados precisos.","moduleNumber":3,"chapterNumber":2,"lessonNumber":5,"file":"vd3_105.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"DzXjCUFySMo","youtube_title":"[Curso Python 3.2.5] Fun\u00e7\u00f5es e Manipula\u00e7\u00e3o de DataFrames","video_contents":"Vamos aprender a integrar fun\u00e7\u00f5es personalizadas em DataFrames, aplicando conceitos explorados em m\u00f3dulos anteriores. Esta aula foca na reciclagem de fun\u00e7\u00f5es, como a que calcula o IMC, usando o comando apply para criar colunas e gerar insights. Voc\u00ea ir\u00e1 observar como usar a fun\u00e7\u00e3o round para ajustar a precis\u00e3o dos dados e monitorar todo o processo para garantir resultados precisos e satisfat\u00f3rios. Ao final, ao executar o notebook, ver\u00e1 como essas t\u00e9cnicas ampliam as possibilidades de an\u00e1lise ampliando o n\u00famero de colunas no seu dataframe."},{"id":44191,"chapterId":52319,"title":"Pandas: Calculando IMC com Excel","description":"Agora n\u00f3s vamos explorar como usar o Pandas para calcular o IMC de v\u00e1rias pessoas a partir de um arquivo Excel. Essa aula mostra como essa abordagem lida com grandes volumes de dados. Iremos comparar com t\u00e9cnicas simples do m\u00f3dulo 1, capacitando voc\u00ea a importar e analisar planilhas com efici\u00eancia.","moduleNumber":3,"chapterNumber":2,"lessonNumber":6,"file":"vd3_106.mp4","footer":null,"youtube_id":"TfG_T95Ve2Q","youtube_title":"[Curso Python 3.2.6] Pandas: Calculando IMC com Excel","video_contents":"Agora n\u00f3s vamos explorar como usar o Pandas para calcular o IMC de uma s\u00e9rie de pessoas utilizando um arquivo Excel como fonte de dados. Essa aula mostra como essa abordagem permite lidar com grandes volumes de dados, algo que n\u00e3o seria vi\u00e1vel com dados digitados diretamente no c\u00f3digo. Iremos comparar as diferen\u00e7as entre o uso do Pandas neste m\u00f3dulo e as t\u00e9cnicas mais simples utilizadas no m\u00f3dulo 1. Ao final, voc\u00ea estar\u00e1 apto a importar, manipular e analisar dados de planilhas com efici\u00eancia."},{"id":82991,"chapterId":20380,"title":"Incorporando IA e APIs no Python","description":"Nessa aula, voc\u00ea ir\u00e1 explorar como usar Python para integrar intelig\u00eancia artificial em seus projetos. Abordaremos prompts e chamadas de APIs, com foco na popular IA da OpenAI. As t\u00e9cnicas ser\u00e3o adapt\u00e1veis a outras IAs, desmistificando seu uso para um c\u00f3digo mais poderoso e interativo.","moduleNumber":3,"chapterNumber":3,"lessonNumber":1,"file":"vd3_201.mp4","footer":"Clique <a target=\"_blank\" href=\"https:\/\/platform.openai.com\/\">AQUI<\/a> para acessar o console da OpenAI.\"","youtube_id":"pHql11CaauI","youtube_title":"[Curso Python 3.3.1] Incorporando IA e APIs no Python","video_contents":"Nessa aula, voc\u00ea ir\u00e1 explorar como usar Python para integrar intelig\u00eancia artificial em seus projetos. Aprenderemos a trabalhar com prompts e chamadas de APIs, focando na popular IA da OpenAI. Embora usemos esta API como exemplo principal, as t\u00e9cnicas ensinadas ser\u00e3o adapt\u00e1veis a outras IAs com modifica\u00e7\u00f5es m\u00ednimas. Vamos desmistificar o uso dessas ferramentas, tornando seu c\u00f3digo mais poderoso e interativo. Prepare-se para dar um grande passo na implementa\u00e7\u00e3o de IA em seus programas Python!"},{"id":99095,"chapterId":20380,"title":"Criando Scripts com API OpenAI","description":"Agora vamos explorar a cria\u00e7\u00e3o de scripts utilizando a IA. Come\u00e7aremos com um novo arquivo IPYNB e importando o pacote OpenAI. Definiremos a vari\u00e1vel \"api_key\" e usaremos \"client\" para interagir com a API, preparando o ambiente para funcionalidades avan\u00e7adas.","moduleNumber":3,"chapterNumber":3,"lessonNumber":2,"file":"vd3_202.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"CGSgwxWYFqU","youtube_title":"[Curso Python 3.3.2] Criando Scripts com API OpenAI","video_contents":"Agora vamos explorar a cria\u00e7\u00e3o de scripts utilizando a IA. Come\u00e7aremos abrindo um novo arquivo IPYNB e importando o pacote da OpenAI. Ao executar esta c\u00e9lula, nenhuma mensagem de retorno dever\u00e1 aparecer. Depois, voc\u00ea ir\u00e1 definir uma vari\u00e1vel chamada \"api_key\" e inserir a chave obtida anteriormente. Em seguida, criaremos outra vari\u00e1vel chamada \"client\" utilizando a biblioteca importada, passando a chave da API como par\u00e2metro. Isso ir\u00e1 preparar o ambiente para interagir com a API e explorar funcionalidades avan\u00e7adas."},{"id":17052,"chapterId":20380,"title":"Manipula\u00e7\u00e3o de Vari\u00e1veis e Estruturas","description":"Vamos explorar a cria\u00e7\u00e3o e uso de vari\u00e1veis em Python, focando em listas e dicion\u00e1rios. Aprenda a inicializar listas, adicionar dicion\u00e1rios com pares chave-valor e manipular respostas de fun\u00e7\u00f5es. Entenda como esses conceitos s\u00e3o essenciais para o desenvolvimento de aplica\u00e7\u00f5es mais complexas.","moduleNumber":3,"chapterNumber":3,"lessonNumber":3,"file":"vd3_203.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"88UzSz5xxoI","youtube_title":"[Curso Python 3.3.3] Manipula\u00e7\u00e3o de Vari\u00e1veis e Estruturas","video_contents":"Nessa aula, abordaremos a cria\u00e7\u00e3o e uso de vari\u00e1veis em Python, come\u00e7ando pela defini\u00e7\u00e3o de listas e dicion\u00e1rios. Vamos entender como inicializar uma lista e adicionar dicion\u00e1rios dentro dela, cada um contendo pares chave-valor. Exploraremos como as chaves e valores funcionam, utilizando um exemplo de intera\u00e7\u00e3o com uma IA. Tamb\u00e9m aprenderemos a armazenar e manipular respostas de fun\u00e7\u00f5es e como recuperar seus resultados de forma eficaz. Esse conhecimento \u00e9 fundamental para desenvolver aplica\u00e7\u00f5es mais complexas no futuro."},{"id":88633,"chapterId":20380,"title":"Passando Instru\u00e7\u00f5es para a API","description":"Agora n\u00f3s vamos aprimorar a intera\u00e7\u00e3o com a API, aprendendo a passar instru\u00e7\u00f5es espec\u00edficas atrav\u00e9s de uma lista de \"messages\". Exploraremos a inclus\u00e3o de m\u00faltiplos dicion\u00e1rios nessa lista para uma comunica\u00e7\u00e3o mais detalhada, otimizando consultas e esclarecendo inten\u00e7\u00f5es durante a transmiss\u00e3o de instru\u00e7\u00f5es.","moduleNumber":3,"chapterNumber":3,"lessonNumber":4,"file":"vd3_204.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"V9Lty8m6Jw4","youtube_title":"[Curso Python 3.3.4] Passando Instru\u00e7\u00f5es para a API","video_contents":"Agora n\u00f3s vamos melhorar a intera\u00e7\u00e3o com a API, aprendendo a passar instru\u00e7\u00f5es espec\u00edficas atrav\u00e9s de uma lista de \"messages\". Isso envolve a inclus\u00e3o de m\u00faltiplos dicion\u00e1rios dentro da lista, permitindo uma comunica\u00e7\u00e3o mais complexa e detalhada. Vamos explorar como adicionar essas instru\u00e7\u00f5es pode otimizar nossas consultas e dar mais clareza ao que desejamos comunicar. Voc\u00ea vai ver como as instru\u00e7\u00f5es s\u00e3o transmitidas e interpretadas pela API, enriquecendo suas habilidades na utiliza\u00e7\u00e3o dessa ferramenta poderosa."},{"id":33238,"chapterId":20380,"title":"Passando prompts mais complexos","description":"Nessa aula, vamos elaborar prompts mais complexos usando concatena\u00e7\u00e3o de strings. Exploraremos aspas triplas para m\u00faltiplas linhas e operadores '+' e '+=' para unir strings. Revisaremos conceitos anteriores e, ao final, voc\u00ea estar\u00e1 apto a criar textos complexos e incorporar vari\u00e1veis eficientemente.","moduleNumber":3,"chapterNumber":3,"lessonNumber":5,"file":"vd3_205.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"eoPMPUb59gk","youtube_title":"[Curso Python 3.3.5] Passando prompts mais complexos","video_contents":"Nessa aula vamos elaborar prompts mais complexos atrav\u00e9s da concatena\u00e7\u00e3o de strings. Iremos explorar como usar aspas triplas para criar strings de m\u00faltiplas linhas e a utiliza\u00e7\u00e3o de operadores como '+' e '+=' para unir strings. Vamos tamb\u00e9m revisar conceitos discutidos no m\u00f3dulo anterior. Ao final, voc\u00ea estar\u00e1 apto a criar textos complexos e incorporar vari\u00e1veis em strings, tornando seu c\u00f3digo mais leg\u00edvel e eficiente."},{"id":38197,"chapterId":64309,"title":"Consolida\u00e7\u00e3o e Integra\u00e7\u00e3o de Python","description":"Vamos consolidar nossos conhecimentos criando um c\u00f3digo coeso. Abriremos a planilha 'profiles', calcularemos o IMC e usaremos a API da OpenAI para recomenda\u00e7\u00f5es personalizadas. Finalizamos exportando os dados processados para uma nova planilha de forma organizada e eficiente.","moduleNumber":3,"chapterNumber":4,"lessonNumber":1,"file":"vd3_301.mp4","footer":null,"youtube_id":"Q2A3kmMeTmw","youtube_title":"[Curso Python 3.4.1] Consolida\u00e7\u00e3o e Integra\u00e7\u00e3o de Python","video_contents":"Vamos consolidar nossos conhecimentos reunidos at\u00e9 aqui, criando um \u00fanico c\u00f3digo coeso. Vamos explicar o que ser\u00e1 feito nas demais aulas. Come\u00e7aremos abrindo a planilha \"profiles\" usada anteriormente e percorremos cada registro para calcular o IMC e determinar o status. Em seguida, integraremos a API da OpenAI para obter recomenda\u00e7\u00f5es personalizadas de acordo com os dados processados. Por fim, exportaremos tudo para uma nova planilha, organizando as informa\u00e7\u00f5es de forma pr\u00e1tica e eficiente."},{"id":66754,"chapterId":64309,"title":"Integra\u00e7\u00e3o de APIs com Pandas","description":"Agora n\u00f3s vamos avan\u00e7ar no projeto integrando APIs de intelig\u00eancia artificial com a biblioteca Pandas. Importaremos o pacote da OpenAI e configuraremos as credenciais. Gerenciaremos a chave e o cliente em uma c\u00e9lula, ajustando o loop para processar dados de \"profiles\". Enrique\u00e7a seu c\u00f3digo!","moduleNumber":3,"chapterNumber":4,"lessonNumber":2,"file":"vd3_302.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"EljVHn-DHGo","youtube_title":"[Curso Python 3.4.2] Integra\u00e7\u00e3o de APIs com Pandas","video_contents":"Agora n\u00f3s vamos avan\u00e7ar no projeto integrando APIs de intelig\u00eancia artificial com a biblioteca Pandas. Iniciaremos importando o pacote da OpenAI e configuraremos as credenciais necess\u00e1rias. Em seguida, criaremos uma c\u00e9lula para gerenciar a chave e o cliente. Depois, ajustaremos o loop existente para recuperar e processar os dados de cada linha do arquivo \"profiles\". Essa abordagem permitir\u00e1 enriquecer o processamento dos dados, aplicando instru\u00e7\u00f5es espec\u00edficas e personalizadas para cada pessoa. Prepare-se para ver seu c\u00f3digo ganhar novos poderes com essa integra\u00e7\u00e3o!"},{"id":49962,"chapterId":64309,"title":"Concatena\u00e7\u00e3o e Convers\u00e3o de Dados","description":"Vamos aprender a concatenar strings com '+', al\u00e9m de converter n\u00fameros em strings usando `str` para evitar erros. Exploraremos o ajuste de mensagens e a implementa\u00e7\u00e3o de chamadas de API com 'print'. Pronto para colocar tudo em pr\u00e1tica?","moduleNumber":3,"chapterNumber":4,"lessonNumber":3,"file":"vd3_303.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"ZG1Bwr20lco","youtube_title":"[Curso Python 3.4.3] Concatena\u00e7\u00e3o e Convers\u00e3o de Dados","video_contents":"Vamos aprender a concatenar strings em Python utilizando o operador '+' e entender como lidar com dados num\u00e9ricos. Iremos converter n\u00fameros em strings usando a fun\u00e7\u00e3o `str`, essencial para evitar erros durante opera\u00e7\u00f5es de concatena\u00e7\u00e3o. Al\u00e9m disso, abordaremos o ajuste do bloco de mensagens e a implementa\u00e7\u00e3o da chamada da API com um simples 'print'. Pronto para rodar o c\u00f3digo com essas integra\u00e7\u00f5es? \u00c9 hora de colocar tudo em pr\u00e1tica!"},{"id":50051,"chapterId":64309,"title":"Executando o script completo","description":"Agora n\u00f3s vamos executar o script completo, percorrendo a planilha com loops para extrair e manipular dados linha por linha. Integraremos chamadas a uma IA para automatizar processos, utilizando `pandas` para manipula\u00e7\u00e3o eficiente. Transforme opera\u00e7\u00f5es manuais em fluxos \u00e1geis e inteligentes.","moduleNumber":3,"chapterNumber":4,"lessonNumber":4,"file":"vd3_304.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"QBHd1OEg8NQ","youtube_title":"[Curso Python 3.4.4] Executando o script completo","video_contents":"Vamos agora rodar tudo, percorrendo a planilha utilizando loops, extraindo e manipulando dados linha por linha. Voc\u00ea ir\u00e1 integrar chamadas a uma IA para processar informa\u00e7\u00f5es automaticamente, transformando opera\u00e7\u00f5es manuais em fluxos de trabalho eficientes. Veremos como o `pandas` ajuda para manipula\u00e7\u00e3o de dados e estrat\u00e9gias para interfacear com servi\u00e7os de IA, ampliando o poder de suas automa\u00e7\u00f5es. Essa abordagem tornar\u00e1 o processamento de dados de planilhas muito mais din\u00e2mico e inteligente."},{"id":74006,"chapterId":75139,"title":"Organizando C\u00f3digo em M\u00f3dulos","description":"Iremos abordar a import\u00e2ncia de dividir seu script em m\u00faltiplos arquivos, promovendo clareza e manuten\u00e7\u00e3o f\u00e1cil. Nesta aula, voc\u00ea aprender\u00e1 a criar e utilizar m\u00f3dulos em Python, tornando o c\u00f3digo mais modular e reutiliz\u00e1vel. Exploraremos pr\u00e1ticas para estruturar projetos eficazmente.","moduleNumber":3,"chapterNumber":5,"lessonNumber":1,"file":"vd3_401.mp4","footer":null,"youtube_id":"Afcm43JVWJ0","youtube_title":"[Curso Python 3.5.1] Organizando C\u00f3digo em M\u00f3dulos","video_contents":"Uma abordagem essencial ao programar \u00e9 garantir que seu c\u00f3digo seja limpo e bem-organizado. Iremos abordar a import\u00e2ncia de dividir seu script Python em v\u00e1rios arquivos, facilitando a compreens\u00e3o e manuten\u00e7\u00e3o. Nesta aula, voc\u00ea ir\u00e1 aprender a criar e utilizar m\u00f3dulos em Python, permitindo que seu c\u00f3digo se torne mais modularizado e reutiliz\u00e1vel. Vamos explorar as melhores pr\u00e1ticas para estruturar seu projeto de forma que cada parte do c\u00f3digo tenha um prop\u00f3sito claro, tornando o processo de desenvolvimento mais eficiente."},{"id":23582,"chapterId":75139,"title":"Organiza\u00e7\u00e3o de C\u00f3digo com M\u00f3dulos","description":"Vamos aprender a organizar nosso projeto em Python utilizando m\u00f3dulos. Come\u00e7aremos criando uma estrutura de pastas para separar funcionalidades, promovendo clareza e f\u00e1cil manuten\u00e7\u00e3o. A pasta 'functions' alojar\u00e1 arquivos como 'data.py' para acesso a dados e 'ai.py' para intelig\u00eancia artificial.","moduleNumber":3,"chapterNumber":5,"lessonNumber":2,"file":"vd3_402.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"rgvLDGzR8Gg","youtube_title":"[Curso Python 3.5.2] Organiza\u00e7\u00e3o de C\u00f3digo com M\u00f3dulos","video_contents":"Vamos aprender a organizar nosso projeto em Python utilizando m\u00f3dulos. Inicialmente, iremos criar uma estrutura de pastas para separar funcionalidades distintas, facilitando o gerenciamento e a compreens\u00e3o do c\u00f3digo. Primeiramente, criaremos a pasta \"functions\" para abrigar arquivos de fun\u00e7\u00e3o espec\u00edficos. O arquivo \"data.py\" conter\u00e1 fun\u00e7\u00f5es de acesso a dados, enquanto o \"ai.py\" ser\u00e1 dedicado \u00e0s fun\u00e7\u00f5es de intelig\u00eancia artificial. Essa segrega\u00e7\u00e3o de responsabilidades n\u00e3o apenas promove clareza e organiza\u00e7\u00e3o, mas tamb\u00e9m facilita a manuten\u00e7\u00e3o e expans\u00e3o do projeto."},{"id":87778,"chapterId":75139,"title":"Projeto Estruturado com Jupyter Notebook","description":"Agora n\u00f3s vamos estruturar um projeto usando Jupyter Notebook. Crie um arquivo 'app.ipynb' e insira duas c\u00e9lulas essenciais. Na primeira, defina 'persons' com 'get_persons', calcule o IMC e determine o status. Na segunda, use um loop para concatenar, enviar e exibir dados, destacando a import\u00e2ncia da organiza\u00e7\u00e3o.","moduleNumber":3,"chapterNumber":5,"lessonNumber":3,"file":"vd3_403.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"9kiylceqAys","youtube_title":"[Curso Python 3.5.3] Projeto Estruturado com Jupyter Notebook","video_contents":"Agora n\u00f3s vamos estruturar um projeto utilizando Jupyter Notebook. Comece criando um arquivo app.ipynb e insira duas c\u00e9lulas essenciais. Na primeira, defina uma vari\u00e1vel 'persons' e utilize a fun\u00e7\u00e3o 'get_persons' para obter dados. Calcule o IMC e determine o status. Na segunda c\u00e9lula, crie um loop dividido em tr\u00eas etapas: concatene dados com 'prep_content', envie com 'submit', e exiba os resultados com 'print'. Embora os resultados sejam os mesmos, a organiza\u00e7\u00e3o do projeto \u00e9 aprimorada, demonstrando o poder de uma boa estrutura\u00e7\u00e3o em Python."},{"id":16296,"chapterId":75139,"title":"An\u00e1lise da Estrutura dos Arquivos no Projeto","description":"Vamos analisar a estrutura dos arquivos do projeto Python, focando em tr\u00eas principais. No `app.py`, observe como o c\u00f3digo principal est\u00e1 estruturado e documentado. Em `ai.py`, concentram-se as fun\u00e7\u00f5es de IA, enquanto `data.py` gere dados modularmente, permitindo modifica\u00e7\u00f5es seguras.","moduleNumber":3,"chapterNumber":5,"lessonNumber":4,"file":"vd3_404.mp4","footer":null,"youtube_id":"5doefHf8M8g","youtube_title":"[Curso Python 3.5.4] An\u00e1lise da Estrutura dos Arquivos no Projeto","video_contents":"Vamos analisar a estrutura dos arquivos do projeto Python. Essa aula \u00e9 sobre a organiza\u00e7\u00e3o de c\u00f3digos atrav\u00e9s de tr\u00eas arquivos principais. No arquivo `app.py`, vamos ver como o c\u00f3digo principal est\u00e1 estruturado de forma clara e bem documentada. Em seguida, exploraremos o `ai.py`, que concentra as fun\u00e7\u00f5es de intelig\u00eancia artificial, facilitando altera\u00e7\u00f5es futuras. Por fim, no `data.py`, entenda como o gerenciamento de dados \u00e9 feito de forma modular. Essa abordagem permite modifica\u00e7\u00f5es localizadas, mantendo o restante do c\u00f3digo seguro e est\u00e1vel."},{"id":41304,"chapterId":13258,"title":"Introdu\u00e7\u00e3o ao M\u00f3dulo do Streamlit","description":"Vamos explorar o in\u00edcio do M\u00f3dulo 4, focando na biblioteca Streamlit. Descubra como essa ferramenta transforma a cria\u00e7\u00e3o de aplicativos em Python, permitindo desenvolver interfaces interativas e amig\u00e1veis. Prepare-se para conhecer suas funcionalidades b\u00e1sicas e come\u00e7ar a construir seus pr\u00f3prios projetos.","moduleNumber":4,"chapterNumber":1,"lessonNumber":1,"file":"vd4_001.mp4","footer":null,"youtube_id":"bSx6KFGzws0","youtube_title":"[Curso Python 4.1.1] Introdu\u00e7\u00e3o ao M\u00f3dulo do Streamlit","video_contents":"Abertura do m\u00f3dulo 4. Apresenta\u00e7\u00e3o da bibloteca \"Streamlit\" para o desenvolvimento de aplicativos em Python."},{"id":91468,"chapterId":13258,"title":"Instalando e testando o Streamlit","description":"Vamos instalar o Streamlit utilizando o comando 'pip install'. Em seguida, testaremos sua configura\u00e7\u00e3o inicial com 'streamlit hello'. Por fim, exploraremos o playground do Streamlit para entender suas funcionalidades b\u00e1sicas.","moduleNumber":4,"chapterNumber":1,"lessonNumber":2,"file":"vd4_002.mp4","footer":null,"youtube_id":"vpNMQhpGleA","youtube_title":"[Curso Python 4.1.2] Instalando e testando o Streamlit","video_contents":"Instalando o Streamlit com o comando \"pip install\". Testando o Streamlit com o comando \"streamlit hello\". Navegando no playground do streamlit."},{"id":52601,"chapterId":75570,"title":"Rodando o primeiro app","description":"Nesta aula, voc\u00ea ir\u00e1 executar seu primeiro aplicativo com o comando 'streamlit run'. Ap\u00f3s isso, faremos altera\u00e7\u00f5es no c\u00f3digo e aprenderemos a rod\u00e1-lo novamente para ver as mudan\u00e7as em a\u00e7\u00e3o. \u00c9 uma introdu\u00e7\u00e3o pr\u00e1tica ao uso do Streamlit para desenvolvimento \u00e1gil de apps.","moduleNumber":4,"chapterNumber":2,"lessonNumber":1,"file":"vd4_101.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"VsevblDATu4","youtube_title":"[Curso Python 4.2.1] Rodando o primeiro app","video_contents":"Rodando o primeiro app com o comando \"streamlit run\". Alterando o c\u00f3digo e rodando novamente."},{"id":21549,"chapterId":75570,"title":"Exibindo informa\u00e7\u00f5es na tela","description":"Vamos explorar como o Streamlit exibe informa\u00e7\u00f5es na tela, adotando uma abordagem de escrita de cima para baixo. Iremos aprender a criar colunas em cada linha para organizar melhor os dados apresentados, otimizando a visualiza\u00e7\u00e3o em nossos projetos.","moduleNumber":4,"chapterNumber":2,"lessonNumber":2,"file":"vd4_102.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"BGvMU2fysFU","youtube_title":"[Curso Python 4.2.2] Exibindo informa\u00e7\u00f5es na tela","video_contents":"Como o Streamlit apresenta informa\u00e7\u00f5es na tela. A escrita de cima para baixo. Criando colunas em cada linha."},{"id":53658,"chapterId":75570,"title":"Comandos para exibi\u00e7\u00e3o de dados","description":"Essa aula \u00e9 dedicada a explorar comandos essenciais no Streamlit para exibir dados de forma eficaz. Vamos aprender sobre title, header, subheader, caption, divider e metric. Compreenda como cada elemento contribui para a clareza e apresenta\u00e7\u00e3o de seu aplicativo.","moduleNumber":4,"chapterNumber":2,"lessonNumber":3,"file":"vd4_103.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"xhZUTG-t-D4","youtube_title":"[Curso Python 4.2.3] Comandos para exibi\u00e7\u00e3o de dados","video_contents":"Comandos para exibi\u00e7\u00e3o de dados no streamlit: title, header, subheader, caption, divider e metric."},{"id":97389,"chapterId":75570,"title":"Comandos para entrada de dados","description":"Vamos explorar os comandos de entrada de dados no Streamlit. Voc\u00ea ir\u00e1 aprender a utilizar text_input para textos, number_input para n\u00fameros, date_input para datas e text_area para textos longos. Essa aula \u00e9 essencial para criar formul\u00e1rios interativos em suas aplica\u00e7\u00f5es.","moduleNumber":4,"chapterNumber":2,"lessonNumber":4,"file":"vd4_104.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"ah-hvMq5-Ic","youtube_title":"[Curso Python 4.2.4] Comandos para entrada de dados","video_contents":"Comandos para entrada de dados no streamlit: text_input, number_input, date_input e text_area."},{"id":61954,"chapterId":75570,"title":"Usando o Pandas com o Streamlit","description":"Vamos explorar o uso do Pandas com o Streamlit, aprendendo a abrir arquivos Excel e exibindo dataframes com comandos m\u00e1gicos. Al\u00e9m disso, voc\u00ea ir\u00e1 utilizar o selectbox do Streamlit para interagir com seus dados de forma din\u00e2mica e eficiente.","moduleNumber":4,"chapterNumber":2,"lessonNumber":5,"file":"vd4_105.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"OW-_kJuTJmM","youtube_title":"[Curso Python 4.2.5] Usando o Pandas com o Streamlit","video_contents":"Uso do Pandas, abrindo arquivos excel, comando m\u00e1gico para exibir dataframe, uso com o selectbox."},{"id":31761,"chapterId":68988,"title":"Preparando a estrutura do aplicativo","description":"Iremos abordar a organiza\u00e7\u00e3o do aplicativo, dividindo o c\u00f3digo em m\u00faltiplos arquivos. Aprenda a criar a pasta 'functions' para armazenar e importar fun\u00e7\u00f5es de maneira eficiente, facilitando a manuten\u00e7\u00e3o e a escalabilidade do seu projeto.","moduleNumber":4,"chapterNumber":3,"lessonNumber":1,"file":"vd4_201.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"HWDSpYY5g7c","youtube_title":"[Curso Python 4.3.1] Preparando a estrutura do aplicativo","video_contents":"Divis\u00e3o do c\u00f3digo em arquivos. Cria\u00e7\u00e3o da pasta functions para os arquivos que ser\u00e3o importados."},{"id":69628,"chapterId":68988,"title":"Montando o arquivo da IA","description":"Nessa aula, vamos configurar o arquivo ai.py. Ele ser\u00e1 respons\u00e1vel por implementar fun\u00e7\u00f5es de intelig\u00eancia artificial e estabelecer a conex\u00e3o necess\u00e1ria com a API da OpenAI. Preparar este arquivo de forma adequada \u00e9 essencial para o funcionamento correto do projeto.","moduleNumber":4,"chapterNumber":3,"lessonNumber":2,"file":"vd4_202.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"_Ktjknt98JU","youtube_title":"[Curso Python 4.3.2] Montando o arquivo da IA","video_contents":"Prepara\u00e7\u00e3o do arquivo ai.py. Ele ter\u00e1 as fun\u00e7\u00f5es de intelig\u00eancia artificial e a conex\u00e3o com a api da OpenAI."},{"id":22067,"chapterId":68988,"title":"Montando o arquivo dos c\u00e1lculos","description":"Agora n\u00f3s vamos preparar o arquivo calcs.py. Ele ser\u00e1 respons\u00e1vel por calcular o \u00cdndice de Massa Corporal (IMC) e determinar o status correspondente. Al\u00e9m disso, incluir\u00e1 fun\u00e7\u00f5es para calcular a idade a partir da data de nascimento e converter idade em ano de nascimento, trazendo praticidade.","moduleNumber":4,"chapterNumber":3,"lessonNumber":3,"file":"vd4_203.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"Z3pI-ZUnHYs","youtube_title":"[Curso Python 4.3.3] Montando o arquivo dos c\u00e1lculos","video_contents":"Prepara\u00e7\u00e3o do arquivo calcs.py. Ele calcula o IMC e o status. Tamb\u00e9m calcula a idade a partir do nascimento e vice-versa."},{"id":70304,"chapterId":68988,"title":"Montando o arquivo do dataframe","description":"Nessa aula, vamos montar o arquivo df.py para manipula\u00e7\u00e3o de dataframes. Voc\u00ea aprender\u00e1 a conectar-se \u00e0 planilha \"profiles\" usando pandas, extrair uma lista de nomes e recuperar dados espec\u00edficos de um perfil selecionado. Isso facilitar\u00e1 a an\u00e1lise e manipula\u00e7\u00e3o de dados no seu projeto.","moduleNumber":4,"chapterNumber":3,"lessonNumber":4,"file":"vd4_204.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"senuoKqiGSI","youtube_title":"[Curso Python 4.3.4] Montando o arquivo do dataframe","video_contents":"Prepara\u00e7\u00e3o do arquivo df.py. Ele faz a conex\u00e3o com a planilha \"profiles\" usando o pandas. Devolve uma lista de nomes e tamb\u00e9m recupera os dados da pessoa selecionada."},{"id":60339,"chapterId":25318,"title":"Iniciando o c\u00f3digo principal","description":"Nessa aula, iremos elaborar o arquivo inicial app.py, aprendendo a importar pacotes e fun\u00e7\u00f5es essenciais. Vamos tamb\u00e9m explorar a cria\u00e7\u00e3o do cabe\u00e7alho, estabelecendo a base para o desenvolvimento do seu projeto em Python.","moduleNumber":4,"chapterNumber":4,"lessonNumber":1,"file":"vd4_301.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"o7lUlAsRGT8","youtube_title":"[Curso Python 4.4.1] Iniciando o c\u00f3digo principal","video_contents":"Elabora\u00e7\u00e3o inicial do arquivo app.py. Importando pacotes e fun\u00e7\u00f5es. Elabora\u00e7\u00e3o do cabe\u00e7alho."},{"id":42548,"chapterId":25318,"title":"Selecionando a pessoa","description":"Iremos explorar a fun\u00e7\u00e3o 'selectbox' do Streamlit para criar interfaces interativas. Tamb\u00e9m utilizaremos fun\u00e7\u00f5es personalizadas do dataframe, desenvolvidas no arquivo df.py, para manipular e exibir dados de forma din\u00e2mica e eficiente.","moduleNumber":4,"chapterNumber":4,"lessonNumber":2,"file":"vd4_302.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"55Cj2rt0qt4","youtube_title":"[Curso Python 4.4.2] Selecionando a pessoa","video_contents":"Fun\u00e7\u00e3o \"selectbox\" do streamlit. Uso das fun\u00e7\u00f5es do dataframe criadas no arquivo df.py."},{"id":94957,"chapterId":25318,"title":"Input de dados e bot\u00e3o \"Enviar\"","description":"Nessa aula, exploraremos caixas de input, incluindo 'text_input', 'number_input', 'date_input' e 'text_area'. Aprenderemos a criar um bot\u00e3o de 'Enviar' usando 'button'. Integrar as fun\u00e7\u00f5es das bibliotecas 'calcs.py' e 'ai.py' faz parte deste aprendizado pr\u00e1tico e essencial.","moduleNumber":4,"chapterNumber":4,"lessonNumber":3,"file":"vd4_303.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"fYHFYZZ_PiM","youtube_title":"[Curso Python 4.4.3] Input de dados e bot\u00e3o \"Enviar\"","video_contents":"Caixas de input de dados com \"text_input\", \"number_input\", \"date_input\" e \"text_area\". Bot\u00e3o de enviar com \"button\". Uso das fun\u00e7\u00f5es \"calcs.py\" e \"ai.py\"."},{"id":90337,"chapterId":25318,"title":"Submetendo \u00e0 IA e fazendo o processamento","description":"Iremos explorar a fun\u00e7\u00e3o 'spinner' do Streamlit para otimizar a experi\u00eancia do usu\u00e1rio durante o processamento. Tamb\u00e9m aprenderemos a submeter dados \u00e0 IA e utilizaremos a fun\u00e7\u00e3o do arquivo 'ai.py' para realizar opera\u00e7\u00f5es espec\u00edficas. Essa aula \u00e9 essencial para integrar IA em suas aplica\u00e7\u00f5es.","moduleNumber":4,"chapterNumber":4,"lessonNumber":4,"file":"vd4_304.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"qjjinJHzvH0","youtube_title":"[Curso Python 4.4.4] Submetendo \u00e0 IA e fazendo o processamento","video_contents":"Fun\u00e7\u00e3o \"spinner\" do streamlit. Submentendo os dados \u00e0 IA. Uso da fun\u00e7\u00e3o do arquivo \"ai.py\"."},{"id":84924,"chapterId":25318,"title":"Digitando uma pessoa nova","description":"Vamos aprender a inserir dados manualmente de uma nova pessoa, garantindo a corre\u00e7\u00e3o de erros comuns. Concluiremos com a integra\u00e7\u00e3o dos dados na aplica\u00e7\u00e3o, assegurando um funcionamento adequado e preciso. Essa aula fornece as habilidades necess\u00e1rias para a entrada eficaz de informa\u00e7\u00f5es.","moduleNumber":4,"chapterNumber":4,"lessonNumber":5,"file":"vd4_305.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"4JQL7szG7aU","youtube_title":"[Curso Python 4.4.5] Digitando uma pessoa nova","video_contents":"Dados inseridos manualmente. Corre\u00e7\u00e3o de erros. Conclus\u00e3o da aplica\u00e7\u00e3o."},{"id":70426,"chapterId":96085,"title":"Deploy da aplica\u00e7\u00e3o no Streamlit Community","description":"Essa aula \u00e9 sobre o processo de deploy de uma aplica\u00e7\u00e3o no Streamlit Community. Iremos explorar as tr\u00eas fases principais: como usar o VS Code para desenvolvimento, integrar e versionar o c\u00f3digo com o GitHub, e finalmente, realizar o deploy na plataforma do Streamlit Community.","moduleNumber":4,"chapterNumber":5,"lessonNumber":1,"file":"vd4_401.mp4","footer":null,"youtube_id":"JpDBRYBWM1o","youtube_title":"[Curso Python 4.5.1] Deploy da aplica\u00e7\u00e3o no Streamlit Community","video_contents":"Explica\u00e7\u00e3o geral do processo de deploy da aplica\u00e7\u00e3o no Streamit Community. As tr\u00eas fases: VS Code, Github e Streamlit Community."},{"id":77299,"chapterId":96085,"title":"Ajustando o c\u00f3digo e ocultando a chave da API","description":"Nesta aula, abordaremos como criar o arquivo 'requirements.txt' e configurar a pasta '.streamlit' com 'secrets.toml'. Faremos ajustes no arquivo 'ai.py', al\u00e9m de instruir sobre a remo\u00e7\u00e3o da pasta '__pycache__'. Essas pr\u00e1ticas ajudam a manter seu projeto seguro e organizado.","moduleNumber":4,"chapterNumber":5,"lessonNumber":2,"file":"vd4_402.mp4","footer":"Agora \u00e9 com voc\u00ea! Carregue o VS Code e pratique essa aula.","youtube_id":"S--yBsscIOE","youtube_title":"[Curso Python 4.5.2] Ajustando o c\u00f3digo e ocultando a chave da API","video_contents":"Criando o arquivo \"requirements.txt\". A pasta \".streamlit\" com o arquivo \"secrets.toml\". Alterando o arquivo \"ai.py\". Apagando a pasta \"py_cache\"."},{"id":27315,"chapterId":96085,"title":"Github: cria\u00e7\u00e3o da conta e upload dos c\u00f3digos","description":"Nessa aula, mergulharemos no universo do GitHub. Vamos criar uma conta, estabelecer nosso primeiro reposit\u00f3rio e aprender a fazer upload de arquivos. Passo a passo, voc\u00ea dominar\u00e1 as etapas essenciais para come\u00e7ar a usar essa poderosa ferramenta de versionamento.","moduleNumber":4,"chapterNumber":5,"lessonNumber":3,"file":"vd4_403.mp4","footer":"Agora \u00e9 com voc\u00ea. Crie a sua conta no Github e suba seus arquivos.","youtube_id":"xAbhkBswRDM","youtube_title":"[Curso Python 4.5.3] Github: cria\u00e7\u00e3o da conta e upload dos c\u00f3digos","video_contents":"Criando conta no Github. Criando reposit\u00f3rio. Fazendo upload de arquivos."},{"id":19257,"chapterId":96085,"title":"Publicando no Streamlit Community Cloud","description":"Essa aula \u00e9 sobre como publicar no Streamlit Community Cloud. Vamos conectar sua conta com o GitHub, criar um app e passar a API Key nos advanced settings. Por fim, faremos o deploy, garantindo que sua aplica\u00e7\u00e3o esteja acess\u00edvel online.","moduleNumber":4,"chapterNumber":5,"lessonNumber":4,"file":"vd4_404.mp4","footer":"Agora \u00e9 com voc\u00ea. Publique seu app no Streamlit Community Cloud.","youtube_id":"x6GMHpJWqng","youtube_title":"[Curso Python 4.5.4] Publicando no Streamlit Community Cloud","video_contents":"Conectando sua conta do Streamlit Community Cloud com o Github. Criando um app. Passando a API Key nos advanced settings. Fazendo o deploy."},{"id":27827,"chapterId":96085,"title":"Limita\u00e7\u00f5es do Streamlit Community Cloud","description":"Vamos explorar as limita\u00e7\u00f5es do Streamlit Community Cloud. Abordaremos como aplicativos sem uso podem adormecer, o impacto de servidores compartilhados na velocidade e as quest\u00f5es de privacidade sem garantias. Essa compreens\u00e3o \u00e9 crucial para otimizar o uso da plataforma.","moduleNumber":4,"chapterNumber":5,"lessonNumber":5,"file":"vd4_405.mp4","footer":null,"youtube_id":"zH50gqvzBZk","youtube_title":"[Curso Python 4.5.5] Limita\u00e7\u00f5es do Streamlit Community Cloud","video_contents":"Limita\u00e7\u00f5es do Streamlit Community Cloud: aplicativo sem uso adormece, servidor compartilhado pode ser lento e n\u00e3o h\u00e1 garantia de privacidade."},{"id":82938,"chapterId":96085,"title":"Servi\u00e7os pagos para deploy e encerramento","description":"Essa aula \u00e9 dedicada a explorar alternativas pagas para publicar aplicativos do Streamlit, como Ploomber e servi\u00e7os de containers. Iremos discutir como essas solu\u00e7\u00f5es podem facilitar o deploy profissional. Al\u00e9m disso, faremos o encerramento do curso com uma revis\u00e3o final.","moduleNumber":4,"chapterNumber":5,"lessonNumber":6,"file":"vd4_406.mp4","footer":null,"youtube_id":"Pyg_3-rFG3I","youtube_title":"[Curso Python 4.5.6] Servi\u00e7os pagos para deploy e encerramento","video_contents":"Alternativas pagas para publicar aplicativos do Streamlit. Ploomber e servi\u00e7os de containers. Encerramento do curso."}]